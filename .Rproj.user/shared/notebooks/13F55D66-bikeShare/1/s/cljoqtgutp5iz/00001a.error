{"frames":[{"func":"arrow::write_dataset(dplyr::mutate(tripTibble, trip_time = lubridate::time_length(lubridate::interval(started_at, \n    ended_at), unit = \"minute\"), .keep = \"all\"), \"tempFiles\", \n    existing_data_behavior = \"delete\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"dplyr::mutate(tripTibble, trip_time = lubridate::time_length(lubridate::interval(started_at, \n    ended_at), unit = \"minute\"), .keep = \"all\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate.RPolarsLazyFrame(tripTibble, trip_time = lubridate::time_length(lubridate::interval(started_at, \n    ended_at), unit = \"minute\"), .keep = \"all\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"translate_dots(.data = .data, ..., env = rlang::current_env())","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(seq_along(dots), function(x) {\n    tmp <- translate_expr(.data = .data, dots[[x]], new_vars = new_vars, \n        env = env)\n    new_vars <<- c(new_vars, names(dots)[x]) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"translate_expr(.data = .data, dots[[x]], new_vars = new_vars, \n    env = env)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"translate(expr, new_vars = new_vars, env = env)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(c(\"tidypolars doesn't work when expressions contain `<pkg>::`.\", \n    \"Use `library(<pkg>)` in your script instead.\"), call = env)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in dplyr::mutate(tripTibble, trip_time = lubridate::time_length(lubridate::interval(started_at,  : \n  \n"}