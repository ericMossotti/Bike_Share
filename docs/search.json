[
  {
    "objectID": "index.html#stakeholders",
    "href": "index.html#stakeholders",
    "title": "Bike-Sharing in the Streets of Chicago",
    "section": "\n1.1 Stakeholders",
    "text": "1.1 Stakeholders\nStarting off, the stakeholders can be identified as Divvy, Lyft, and the City of Chicago Department of Transportation. As such this analysis is meant to provide stakeholders with data-based guidance to better server the residents of Chicago and users of the Divvy bike sharing service. Improving air quality, promoting economic recovery, and reducing traffic congestion were among the rationale for Divvy’s implementation. (“About Divvy: Company & History | Divvy Bikes,” n.d.)"
  },
  {
    "objectID": "index.html#source",
    "href": "index.html#source",
    "title": "Bike-Sharing in the Streets of Chicago",
    "section": "\n1.2 Source",
    "text": "1.2 Source\nThe raw 2023 dataset was directly sourced from Divvy Data. (“Divvy Data,” n.d.)"
  },
  {
    "objectID": "index.html#design",
    "href": "index.html#design",
    "title": "Bike-Sharing in the Streets of Chicago",
    "section": "\n1.3 Design",
    "text": "1.3 Design\nAnother worthy goal of this analysis is to achieve reproducibility and efficiency. To help future analyst teams move this research forward, this project tried to provide adequate code documentation and best practices with regards to clean code and modularity.\nFor example, it was helpful to incorporate certain design decisions to eliminate re-downloading and re-processing of data. For users conducting analysis over the course of days-months on this dataset, following initial download and processing, it is now possible to simply reconnect to the single database file which contains all of the original data including tables written throughout the course of the analysis.\nThe underlying code incorporates an if-else decision, which includes a source code script that handles the initial processing and establishes the database filesystem. Choosing a persistent DuckDB filesystem (as opposed to purely in-memory) seemed optimal in terms of the simplicity and cost-effectiveness of SQL database queries while retaining progress made over extended periods. (“Why DuckDB,” n.d.)"
  },
  {
    "objectID": "index.html#duplicates",
    "href": "index.html#duplicates",
    "title": "Bike-Sharing in the Streets of Chicago",
    "section": "\n2.1 Duplicates",
    "text": "2.1 Duplicates\n\n\n\nCode to Remove Duplicates\n\n\n\n\n\n\n\n\nFirst, create a table containing the duplicated observations.# This is a separate table used to analyze the observations \n#  returned as not distinct (n &gt; 1). \n#   This adds an extra column, labeled \"n\".\ndupeTable &lt;- dplyr::tbl(dbconn,\n                        tblPath,\n                        check_from = FALSE) |&gt;\n    dplyr::select(started_at:end_station_name) |&gt;\n    # Counts of unique rows added for column 'n'\n    dplyr::add_count(started_at,\n                     ended_at,\n                     start_station_name,\n                     end_station_name) |&gt;\n    # Only observations that have been duplicated \n    #  1 or more times are shown.\n    dplyr::filter(n &gt; 1) |&gt;\n    # We want to see all rows, \n    #  not just one row for each obs.\n    dplyr::ungroup() |&gt;\n    dplyr::arrange(started_at) |&gt;\n    dplyr::collect()\n\n\n\nRecord a count of distinct duplicates and total observations.distinctCopiesCount &lt;- dupeTable |&gt;\n    dplyr::distinct(n) |&gt;\n    as.integer() \n\nduplicateObs &lt;- length(dupeTable[[1]])\n\n\n\nCreate a table of the now unduplicated observations we saw before.# The issue is, we need to get rid of not all of these rows, but just the extra duplicate observations.\n# \n# If there were 2 rows of duplicates, one would want to end up with 1 row after removing the extras.\nundupedTable &lt;- \ndupeTable |&gt;\ndplyr::distinct(started_at, \nstart_station_name, \nended_at, \nend_station_name)\n\n\n\nRecord a count of the incorrect observations.# Run an incorrect count on how many rows or observations there are in the dataset.\ncount_incorrectDists &lt;- dplyr::tbl(dbconn,\n                                   tblPath,\n                                   check_from = FALSE) |&gt;\n    dplyr::distinct(dplyr::pick(\"ride_id\")) |&gt;\n    dplyr::count(name = \"Incorrect Distinct Observations\") |&gt;\n    dplyr::collect() |&gt;\n    as.integer()\n\n\n\nRecord a count of the correct observations.# For the correct count of obs\ncount_correctDists &lt;- dplyr::tbl(dbconn,\n                                 tblPath,\n                                 check_from = FALSE) |&gt;\n    dplyr::distinct(\n        dplyr::pick(\n            \"started_at\",\n            \"start_station_name\",\n            \"ended_at\",\n            \"end_station_name\")) |&gt;\n    dplyr::count() |&gt;\n    dplyr::collect() |&gt;\n    as.integer()\n\n\n\nWrite the unduplicated data to the database.dupelessPath &lt;- \"db/dupeless.db\"\n \ndplyr::tbl(dbconn,\n           tblPath,\n           check_from = FALSE) |&gt;\n    dplyr::select(ride_id:trip_time) |&gt;\n    dplyr::distinct(started_at,\n                    start_station_name,\n                    ended_at,\n                    end_station_name,\n                    .keep_all = TRUE) |&gt;\n    dplyr::arrange(started_at) |&gt;\n    dplyr::collect() |&gt;\n    duckdb::dbWriteTable(conn = dbconn,\n                         name = dupelessPath,\n                         overwrite = TRUE,\n                         check_from = FALSE)\n\n\n\nMake the duplicates table.gtDupes &lt;- dupeTable |&gt;\ndplyr::group_by(started_at) |&gt;\ngt::gt(\nrowname_col = \"row\",\ngroupname_col = \"started_at\",\nrow_group_as_column = TRUE\n) |&gt;\ngt::tab_style(\nstyle = list(\ngt::cell_text(weight = \"bold\", align = \"center\"),\ngt::cell_borders(sides = c(\"bottom\"))\n),\nlocations = gt::cells_column_labels(gt::everything())\n) |&gt;\ngt::tab_style(\nstyle = list(\ngt::cell_borders(sides = c(\"left\", \"right\"), color = \"transparent\"),\ngt::cell_text(align = \"center\", v_align = \"middle\")\n),\nlocations = gt::cells_body(gt::everything())\n) |&gt;\ngt::data_color(\ncolumns = start_station_name,\ntarget_columns = gt::everything(),\nmethod = \"auto\",\npalette = \"basetheme::brutal\"\n) |&gt;\ngt::tab_header(title = \"A view of duplicated observations\", subtitle = \"Grouping follows the starting date-time value\") |&gt;\ngt::tab_options(\nheading.title.font.weight = \"bolder\",\nheading.subtitle.font.weight = \"lighter\",\nheading.align = \"center\",\ntable.background.color = \"transparent\",\ntable.font.color = \"SeaShell\",\ntable.font.size = gt::pct(75),\n)\n\n\n\nMake the unduped table.gt_undupes &lt;- undupedTable |&gt;\ndplyr::collect() |&gt;\ndplyr::group_by(started_at) |&gt;\ngt::gt(\nrowname_col = \"row\",\ngroupname_col = \"started_at\",\nrow_group_as_column = TRUE\n) |&gt;\ngt::fmt_number(decimals = 0) |&gt;\n\ngt::tab_style(\nstyle = list(\ngt::cell_text(weight = \"bold\", align = \"center\"),\ngt::cell_borders(sides = c(\"bottom\"))\n),\nlocations = gt::cells_column_labels(gt::everything())\n) |&gt;\ngt::tab_style(\nstyle = list(\ngt::cell_borders(sides = c(\"left\", \"right\")),\ngt::cell_text(align = \"center\", v_align = \"middle\")\n),\nlocations = gt::cells_body(gt::everything())\n) |&gt;\ngt::data_color(\ncolumns = start_station_name,\ntarget_columns = gt::everything(),\nmethod = \"auto\",\npalette = \"basetheme::brutal\"\n) |&gt;\ngt::tab_header(title = \"After duplicates were removed\", subtitle = \"Same grouping\") |&gt;\ngt::tab_options(\nheading.title.font.weight = \"bolder\",\nheading.subtitle.font.weight = \"lighter\",\nheading.align = \"center\",\ntable.background.color = \"transparent\",\ntable.font.color = \"SeaShell\",\ntable.font.size = gt::pct(75)\n)\n\n\n\nCreate an observation history table that summarizes the cleaning so far.# To see the history of obs in our dataset.\nsummaryProcessTable &lt;- tidyr::tribble(\n~ \"Observations\",\n~ \"Counts\",\n\"Original   \",\noriginal_nobs,\n\"Processed   \",\ncount_incorrectDists,\n\"Duplicates   \",\n(count_incorrectDists - count_correctDists),\n\"Total Corrected   \",\ncount_correctDists\n) |&gt;\ngt::gt(rownames_to_stub = FALSE) |&gt;\ngt::tab_header(title = \"Tallying Observations\") |&gt;\ngt::tab_footnote(\nfootnote = gt::md(\"Row counts throughout the cleaning steps.\"),\nlocations = gt::cells_column_labels(columns = Counts)\n) |&gt;\ngt::tab_style(\nstyle = list(\ngt::cell_borders(sides = \"bottom\"),\ngt::cell_text(\nalign = \"left\",\nstretch = \"semi-expanded\",\nwhitespace = \"break-spaces\"\n)\n),\nlocations = gt::cells_body(gt::everything())\n) |&gt;\ngt::tab_style(\ngt::cell_text(\nalign = \"center\",\nstretch = \"semi-expanded\",\nwhitespace = \"break-spaces\"\n),\nlocations = list(\ngt::cells_title(groups = c(\"title\", \"subtitle\")),\ngt::cells_column_labels(gt::everything())\n)\n) |&gt;\ngt::fmt_number(decimals = 0) |&gt;\ngt::tab_options(\nquarto.use_bootstrap = TRUE,\ncolumn_labels.font.weight = \"bold\",\ntable.background.color = \"transparent\",\ntable.font.color = \"SeaShell\",\nrow.striping.background_color = \"gray10\",\nrow.striping.include_table_body = TRUE\n)\n\n\n\n\n\n\nNow the question arises: How does one check the data for duplicates? That is what this section covers, alongside how to only remove what is needed. Care is needed because it might not necessarily be the case that each observation, or obs for short, is unique because a column contains all unique values.\nAll of the values in the ride_id column were found to be unique. However, not all of the obs, or rows, were found to be truly unique. Other columns such as start_time, end_time, start_station, and end_station were used to verify if an obs was distinct. These would have more granular information, down to the second, a given trip’s starting and ending time and location. In this analysis, it was assumed that obs having the same starting and ending date-time and station despite having two different rider IDs was a mistake.\n\n\n\n\n\nTable 2: Duplicates Table\n\n\n\n\n\n\n\nA view of duplicated observations\n\n\nGrouping follows the starting date-time value\n\n\n\nended_at\nstart_station_name\nstart_station_id\nend_station_name\nn\n\n\n\n\n2023-02-19 12:10:52\n2023-02-19 12:24:04\nOrleans St & Merchandise Mart Plaza\nTA1305000022\nGreen St & Randolph St*\n2\n\n\n2023-02-19 12:24:04\nOrleans St & Merchandise Mart Plaza\nTA1305000022\nGreen St & Randolph St*\n2\n\n\n2023-04-15 15:56:18\n2023-04-15 16:01:54\nKedzie Ave & 45th St\n342\nFairfield Ave & 44th St\n2\n\n\n2023-04-15 16:01:54\nKedzie Ave & 45th St\n342\nFairfield Ave & 44th St\n2\n\n\n2023-04-21 09:45:26\n2023-04-21 10:01:23\nMichigan Ave & 8th St\n623\nWentworth Ave & Cermak Rd*\n2\n\n\n2023-04-21 10:01:23\nMichigan Ave & 8th St\n623\nWentworth Ave & Cermak Rd*\n2\n\n\n2023-07-08 18:22:07\n2023-07-08 18:37:31\nMilwaukee Ave & Grand Ave\n13033\nBissell St & Armitage Ave*\n2\n\n\n2023-07-08 18:37:31\nMilwaukee Ave & Grand Ave\n13033\nBissell St & Armitage Ave*\n2\n\n\n2023-07-08 18:58:14\n2023-07-08 19:08:47\nClark St & Schiller St\nTA1309000024\nBissell St & Armitage Ave*\n2\n\n\n2023-07-08 19:08:47\nClark St & Schiller St\nTA1309000024\nBissell St & Armitage Ave*\n2\n\n\n2023-07-09 18:00:17\n2023-07-09 18:40:49\nWells St & Hubbard St\nTA1307000151\nFort Dearborn Dr & 31st St*\n2\n\n\n2023-07-09 18:40:49\nWells St & Hubbard St\nTA1307000151\nFort Dearborn Dr & 31st St*\n2\n\n\n2023-07-10 20:10:41\n2023-07-10 20:19:59\nClark St & Newport St\n632\nLincoln Ave & Roscoe St*\n2\n\n\n2023-07-10 20:19:59\nClark St & Newport St\n632\nLincoln Ave & Roscoe St*\n2\n\n\n2023-07-15 10:48:09\n2023-07-15 10:58:22\nRacine Ave & Wrightwood Ave\nTA1309000059\nBissell St & Armitage Ave*\n2\n\n\n2023-07-15 10:58:22\nRacine Ave & Wrightwood Ave\nTA1309000059\nBissell St & Armitage Ave*\n2\n\n\n2023-07-15 19:38:51\n2023-07-15 19:55:04\nAvondale Ave & Irving Park Rd\n15624\nPublic Rack - Hamlin Ave & Fullerton Ave\n2\n\n\n2023-07-15 19:55:04\nAvondale Ave & Irving Park Rd\n15624\nPublic Rack - Hamlin Ave & Fullerton Ave\n2\n\n\n2023-07-23 11:41:36\n2023-07-23 12:07:13\nBurnham Harbor\n15545\nFort Dearborn Dr & 31st St*\n2\n\n\n2023-07-23 12:07:13\nBurnham Harbor\n15545\nFort Dearborn Dr & 31st St*\n2\n\n\n2023-07-25 18:08:47\n2023-07-25 18:21:45\nWabash Ave & Roosevelt Rd\nTA1305000002\nWentworth Ave & Cermak Rd*\n2\n\n\n2023-07-25 18:21:45\nWabash Ave & Roosevelt Rd\nTA1305000002\nWentworth Ave & Cermak Rd*\n2\n\n\n2023-07-26 21:10:55\n2023-07-26 21:28:44\nBurnham Harbor\n15545\nFort Dearborn Dr & 31st St*\n2\n\n\n2023-07-26 21:28:44\nBurnham Harbor\n15545\nFort Dearborn Dr & 31st St*\n2\n\n\n2023-08-05 19:40:37\n2023-08-05 20:08:35\nMorgan St & Lake St*\nchargingstx4\nMorgan St & Lake St*\n2\n\n\n2023-08-05 20:08:35\nMorgan St & Lake St*\nchargingstx4\nMorgan St & Lake St*\n2\n\n\n2023-08-12 17:46:53\n2023-08-12 17:57:40\nCalumet Ave & 18th St\n13102\nWentworth Ave & Cermak Rd*\n2\n\n\n2023-08-12 17:57:40\nCalumet Ave & 18th St\n13102\nWentworth Ave & Cermak Rd*\n2\n\n\n2023-08-17 12:23:50\n2023-08-17 12:37:45\nDuSable Lake Shore Dr & Monroe St\n13300\nStreeter Dr & Grand Ave\n2\n\n\n2023-08-17 12:37:45\nDuSable Lake Shore Dr & Monroe St\n13300\nStreeter Dr & Grand Ave\n2\n\n\n2023-09-03 14:55:59\n2023-09-03 15:58:21\nBissell St & Armitage Ave*\nchargingstx1\nBissell St & Armitage Ave*\n2\n\n\n2023-09-03 15:58:21\nBissell St & Armitage Ave*\nchargingstx1\nBissell St & Armitage Ave*\n2\n\n\n2023-09-25 17:38:05\n2023-09-25 17:52:29\nFairbanks Ct & Grand Ave\nTA1305000003\nDuSable Lake Shore Dr & North Blvd\n2\n\n\n2023-09-25 17:52:29\nFairbanks Ct & Grand Ave\nTA1305000003\nDuSable Lake Shore Dr & North Blvd\n2\n\n\n2023-10-10 13:22:51\n2023-10-10 13:29:37\nLoomis St & Lexington St\n13332\nMorgan St & Polk St\n2\n\n\n2023-10-10 13:29:37\nLoomis St & Lexington St\n13332\nMorgan St & Polk St\n2\n\n\n\n\n\n\n\n\n\n\n\nAlthough, it is actually unknown how that error would happen. It could have been assumed that one person checked out multiple bikes at once. In that instance, each bike would be assigned a unique ride_id. That, however, has only happened 18 times over a year. Since it is only one copy every time, red flags were raised. Perhaps trips could be grouped where one person pays for a other riders? If that were the case, then why is there always one duplicate?\nIn Table 2, duplicate observations were listed and grouped by color. Contrast this with Table 3, which has removed the extra copy of the observation while preserving the observation itself. Of the duplicates, each had one extra copy. It was noted that the number of rows in the duplicates table is 36. Each duplicated observation has one duplicate, where n is always the value 2. So the expected removed obs was 18. A complication involved how to remove not all obs but just one extra duplicate observation from each.\n\n\n\n\n\nTable 3: Un-duplicated Table\n\n\n\n\n\n\n\nAfter duplicates were removed\n\n\nSame grouping\n\n\n\nstart_station_name\nended_at\nend_station_name\n\n\n\n\n2023-02-19 12:10:52\nOrleans St & Merchandise Mart Plaza\n2023-02-19 12:24:04\nGreen St & Randolph St*\n\n\n2023-04-15 15:56:18\nKedzie Ave & 45th St\n2023-04-15 16:01:54\nFairfield Ave & 44th St\n\n\n2023-04-21 09:45:26\nMichigan Ave & 8th St\n2023-04-21 10:01:23\nWentworth Ave & Cermak Rd*\n\n\n2023-07-08 18:22:07\nMilwaukee Ave & Grand Ave\n2023-07-08 18:37:31\nBissell St & Armitage Ave*\n\n\n2023-07-08 18:58:14\nClark St & Schiller St\n2023-07-08 19:08:47\nBissell St & Armitage Ave*\n\n\n2023-07-09 18:00:17\nWells St & Hubbard St\n2023-07-09 18:40:49\nFort Dearborn Dr & 31st St*\n\n\n2023-07-10 20:10:41\nClark St & Newport St\n2023-07-10 20:19:59\nLincoln Ave & Roscoe St*\n\n\n2023-07-15 10:48:09\nRacine Ave & Wrightwood Ave\n2023-07-15 10:58:22\nBissell St & Armitage Ave*\n\n\n2023-07-15 19:38:51\nAvondale Ave & Irving Park Rd\n2023-07-15 19:55:04\nPublic Rack - Hamlin Ave & Fullerton Ave\n\n\n2023-07-23 11:41:36\nBurnham Harbor\n2023-07-23 12:07:13\nFort Dearborn Dr & 31st St*\n\n\n2023-07-25 18:08:47\nWabash Ave & Roosevelt Rd\n2023-07-25 18:21:45\nWentworth Ave & Cermak Rd*\n\n\n2023-07-26 21:10:55\nBurnham Harbor\n2023-07-26 21:28:44\nFort Dearborn Dr & 31st St*\n\n\n2023-08-05 19:40:37\nMorgan St & Lake St*\n2023-08-05 20:08:35\nMorgan St & Lake St*\n\n\n2023-08-12 17:46:53\nCalumet Ave & 18th St\n2023-08-12 17:57:40\nWentworth Ave & Cermak Rd*\n\n\n2023-08-17 12:23:50\nDuSable Lake Shore Dr & Monroe St\n2023-08-17 12:37:45\nStreeter Dr & Grand Ave\n\n\n2023-09-03 14:55:59\nBissell St & Armitage Ave*\n2023-09-03 15:58:21\nBissell St & Armitage Ave*\n\n\n2023-09-25 17:38:05\nFairbanks Ct & Grand Ave\n2023-09-25 17:52:29\nDuSable Lake Shore Dr & North Blvd\n\n\n2023-10-10 13:22:51\nLoomis St & Lexington St\n2023-10-10 13:29:37\nMorgan St & Polk St\n\n\n\n\n\n\n\n\n\n\n\nThe count of distinct n-values for the un-duplicated table was 18. Then a count of observations in the dataset were recorded. The incorrect number of obs was 4,331,707. The correct obs after removing duplicated obs was 4,331,689. In short, 18 additional obs were removed. Table 4\n\n\n\n\n\nTable 4: Observation Processing History\n\n\n\n\n\n\n\nTallying Observations\n\n\nObservations\nCounts1\n\n\n\n\n\nOriginal\n5,719,877\n\n\nProcessed\n4,331,707\n\n\nDuplicates\n18\n\n\nTotal Corrected\n4,331,689\n\n\n\n\n1 Row counts throughout the cleaning steps."
  },
  {
    "objectID": "index.html#outliers",
    "href": "index.html#outliers",
    "title": "Bike-Sharing in the Streets of Chicago",
    "section": "\n2.2 Outliers",
    "text": "2.2 Outliers\nObservations that were deemed erroneous or not useful for identifying trends in how the service is utilized by members and casual users were filtered out. It is good practice to keep note of these errors as they might explain some differences in how members and casual use the service.\nIt was determined that trips with negative minutes were errors. Trips less than 1 minute but greater than 0 were noted, but removed, as they might skew the statistics we derive from this data too much later on. The underlying reason for low trip times could be from people just wanting to try it out briefly before committing or quickly realized they did not like it. There were observations that did not make much sense, but most of the data was retained.\nAs in the first part, an if-else decision was chosen because it makes testing easier. An external database filtering script was chosen to shorten the code needed inside the main Quarto document itself. The data from which the rest of the tables are based on are used for the rest of the analysis.\n\n\n\n\n\n\n\nFilter the database\n\n\n\n\n\nThis would execute if the if-else conditions were met to filter the db/data.db database tablefilterDatabase &lt;- function(conxn = dbconn,\n                           path1 = dupelessPath,\n                           path2 = tblPath_fltrd) {\n    dplyr::tbl(conxn, path1, check_from = FALSE) |&gt;\n        dplyr::filter(trip_time &gt; 1, trip_time &lt; 480, rideable_type != \"docked_bike\") |&gt;\n        dplyr::collect() |&gt;\n        # Might as well calculate distance traveled while at it.\n        dplyr::mutate(\n            miles = geosphere::distGeo(\n                p1 = cbind(start_lng, start_lat),\n                p2 = cbind(end_lng, end_lat)\n            ) / 1000 * 0.62137119,\n            mph = (miles / (trip_time / 60))\n        ) |&gt;\n        # It's nonsensical to rent a bike for distances easily walked.\n        dplyr::filter(miles &gt; 0.1, # Seems that pro cyclists average around 20 mph,\n                      # so I set that as the ceiling.\n                      mph &lt;= 20, # To account for time spent idling, stoplights and\n                      # traffic.\n                      mph &gt; 1) |&gt;\n        duckdb::dbWriteTable(\n            conn = conxn,\n            name = path2,\n            overwrite = TRUE,\n            check_from = FALSE\n        )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFilter Database\n\n\n\n\n\n\n\n\nFirst, if you happen to be re-using this code - this is so you do not have to re-download or re-filter after making further adjustments.tblPath &lt;- \"db/data.db\"\ndupelessPath &lt;- \"db/dupeless.db\"\ntblPath_fltrd &lt;- \"db/data_fltrd.db\"\n\nif (exists(\"dbconn\") == FALSE && dir.exists(\"db\") == TRUE) {\n    dbconn &lt;- DBI::dbConnect(\n        duckdb::duckdb(),\n        dbdir = tblPath,\n        read_only = FALSE,\n        check_from = FALSE\n    )\n}\n\nif (duckdb::dbExistsTable(dbconn,\n                          \"tblPath_fltrd\") == FALSE) {\n    source(\"filterDatabase.R\")\n    filterDatabase()\n}"
  },
  {
    "objectID": "index.html#sec-writeFreqs",
    "href": "index.html#sec-writeFreqs",
    "title": "Bike-Sharing in the Streets of Chicago",
    "section": "\n3.1 Generating Frequency Tables",
    "text": "3.1 Generating Frequency Tables\nThe rationale for frequency tables is to gain quick insights into the data. It is taking a methodical approach that, while simple, can create a crucial pathway towards understanding the bigger picture. Many of these tables are used in the tabset section, Section 3.2."
  },
  {
    "objectID": "index.html#sec-freqAnalysis",
    "href": "index.html#sec-freqAnalysis",
    "title": "Bike-Sharing in the Streets of Chicago",
    "section": "\n3.2 Table Analysis",
    "text": "3.2 Table Analysis\n\n\n\n\nMembership\nCycle Types\nMonth\nDay\nHour\nMiles\nMph\nTrip-Times\n\n\n\n\n\n\n3.2.1 Overall Member to Casual Count\n\n\n\n\nTable 5 gives the total count of trips taken by members and casuals. The rest of the tabs in this section will give total counts along with group counts by membership status.\n\n\n\n\n\n\nCodedplyr::tbl(dbconn, \"db/freq_member.db\") |&gt;\ngt::gt() |&gt;\ngt::tab_header(title = \"Subscriber Frequency\", subtitle = \"Annual and casual rider trip counts\") |&gt;\ngt::fmt_number(decimals = 0) |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\",\ncolumn_labels.hidden = TRUE\n)\nmembers_totalSummary &lt;- dplyr::tbl(dbconn, tblPath_fltrd) |&gt;\ndplyr::select(member_casual) |&gt;\ndplyr::collect() |&gt;\ngtsummary::tbl_summary() |&gt;\ngtsummary::as_gt() |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\")\n\n\nTable 5: Total Member Frequency\n\n\n\n\n\n\n\nSubscriber Frequency\n\n\nAnnual and casual rider trip counts\n\n\n\n\ncasual\n1,260,621\n\n\nmember\n2,636,777\n\n\n\n\n\n\n\n\n\n\n\n\nCodemember_freqTbl &lt;- dplyr::tbl(dbconn, \"db/freq_member.db\") |&gt;\ndplyr::collect()\n\nmember_freqTbl |&gt;\nggplot2::ggplot(mapping = ggplot2::aes(x = member_casual, y = n, fill = n)) +\nggplot2::geom_col(show.legend = FALSE) +\nggplot2::labs(title = \"Membership Frequency\", subtitle = \"Trips taken by annual subscribers vs non-subscribers\") +\nggplot2::scale_fill_distiller(palette = \"YlOrRd\") +\nggplot2::theme(\npanel.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\nplot.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\ntext = ggplot2::element_text(color = \"seashell\"),\npanel.grid = ggplot2::element_blank(),\naxis.title.x = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.title.y = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.text.x = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(1, 1, 1, 1), \"mm\")),\naxis.text.y = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(2, 2, 2, 2), \"mm\")),\naxis.ticks = ggplot2::element_line(color = \"LavenderBlush\"),\naxis.ticks.y = ggplot2::element_blank(),\npanel.grid.major.y = ggplot2::element_line(color = \"grey30\"))\n\n\n\n\n\n\nFigure 1: Total Member Frequency\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTotals Summary\n\ntable\nplot\n\n\n\nMembership Summary\n\ntable\nplot\n\n\n\nTest Association\n\ntable\n\n\n\n\n\n\n\n\nIn Table 6 and Figure 2, the total trips taken on conventional bicycles and electric bicycles are compared. Clearly, electric bicycles are not used as much as conventional.\nMoving to Table 7 and Figure 3, the frequency of trips taken is split into groups of membership status. There is a large disparity not only between the scale of trips taken between annual subscribers and casual users, but also within the the group of subscribers themselves. While there is a small difference between trips taken by casual members on conventional compared to electric, that said difference is more pronounced in the annual subscriber group.\nWith \\(p &lt; 0.05\\), there appears to be a strong association between members and casuals with regards to the type of bicycles people are likely to ride. ?@tbl-chiTypes\n\n\n\n\n3.2.2 Totals Summary\n\n\n\nCodedplyr::tbl(dbconn, \"db/freq_rTypes.db\") |&gt;\ngt::gt() |&gt;\ngt::tab_header(title = \"Bicycle Type Frequency\", subtitle = \"Counts trips taken by cycle type\") |&gt;\ngt::fmt_number(decimals = 0) |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\",\ncolumn_labels.hidden = TRUE\n)\n\n\nTable 6: Cycle Type Total Frequency\n\n\n\n\n\n\n\nBicycle Type Frequency\n\n\nCounts trips taken by cycle type\n\n\n\n\nclassic_bike\n2,453,725\n\n\nelectric_bike\n1,443,673\n\n\n\n\n\n\n\n\n\n\n\n\nCoderidetype_freqTbl &lt;- dplyr::tbl(dbconn, \"db/freq_rTypes.db\") |&gt;\ndplyr::collect()\n\nridetype_freqTbl |&gt;\nggplot2::ggplot(mapping = ggplot2::aes(x = rideable_type, y = n, fill = n)) +\nggplot2::geom_col(show.legend = FALSE) +\nggplot2::scale_fill_distiller(palette = \"YlOrRd\") +\nggplot2::labs(title = \"Cycle Type Frequency\", subtitle = \"Trips taken per cycle type\") +\nggplot2::theme(\npanel.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\nplot.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\ntext = ggplot2::element_text(color = \"seashell\"),\npanel.grid = ggplot2::element_blank(),\naxis.title.x = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.title.y = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.text.x = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(1, 1, 1, 1), \"mm\")),\naxis.text.y = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(2, 2, 2, 2), \"mm\")),\naxis.ticks = ggplot2::element_line(color = \"LavenderBlush\"),\naxis.ticks.y = ggplot2::element_blank(),\npanel.grid.major.y = ggplot2::element_line(color = \"grey30\")\n)\n\n\n\n\n\n\nFigure 2: Cycle Type Total Frequency\n\n\n\n\n\n\n\n3.2.3 Membership Summary\n\n\n\nCodectype_tbl &lt;- dplyr::tbl(dbconn, \"db/freqCompare_rType.db\") |&gt;\ngt::gt(groupname_col = \"rideable_type\", row_group_as_column = TRUE) |&gt;\ngt::tab_header(title = \"Bicycle Type to Membership Frequency\", subtitle = \"Grouped by sub. status\") |&gt;\ngt::fmt_number(decimals = 0) |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\",\ncolumn_labels.hidden = TRUE)\n\n\nctype_tbl\n\n\nTable 7: Cycle Type Group Frequency\n\n\n\n\n\n\n\nBicycle Type to Membership Frequency\n\n\nGrouped by sub. status\n\n\n\n\nclassic_bike\nmember\n1,714,250\n\n\ncasual\n739,475\n\n\nelectric_bike\ncasual\n521,146\n\n\nmember\n922,527\n\n\n\n\n\n\n\n\n\n\n\n\nCodedplyr::tbl(dbconn, \"db/freqCompare_rType.db\") |&gt;\nggplot2::ggplot(mapping = ggplot2::aes(x = rideable_type, y = n, fill = member_casual)) +\nggplot2::geom_col(show.legend = TRUE, position = \"dodge\") +\nggplot2::scale_fill_brewer(palette = \"Paired\", name = \"Subscriber Status\") +\nggplot2::labs(title = \"Cycle Type to Membership Frequency\", subtitle = \"Compare trips taken by cycle type to membership status\") +\nggplot2::theme(\npanel.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\nplot.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\ntext = ggplot2::element_text(color = \"seashell\"),\npanel.grid = ggplot2::element_blank(),\naxis.title.x = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.title.y = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.text.x = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(1, 1, 1, 1), \"mm\")),\naxis.text.y = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(2, 2, 2, 2), \"mm\")),\naxis.ticks = ggplot2::element_line(color = \"LavenderBlush\"),\naxis.ticks.y = ggplot2::element_blank(),\npanel.grid.major.y = ggplot2::element_line(color = \"grey30\"),\nlegend.background = ggplot2::element_rect(fill = \"#222222\")\n)\n\n\n\n\n\n\nFigure 3: Cycle Type Group Frequency\n\n\n\n\n\n\n\n3.2.4 Testing the association between membership and bicycle type\n\nCodectype_compareSummary &lt;- dplyr::tbl(dbconn, tblPath_fltrd) |&gt;\ndplyr::select(rideable_type, member_casual) |&gt;\ndplyr::collect() |&gt;\ngtsummary::tbl_summary(by = member_casual, label = list(rideable_type = \"Bicycle Type\", member_casual = \"Membership\")) |&gt;\ngtsummary::add_p()\n\n\nctype_compareSummary |&gt;\ngtsummary::as_gt() |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\")\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n\ncasual, N = 1,260,6211\n\n\nmember, N = 2,636,7771\n\n\np-value2\n\n\n\n\nBicycle Type\n\n\n&lt;0.001\n\n\n    classic_bike\n739,475 (59%)\n1,714,250 (65%)\n\n\n\n    electric_bike\n521,146 (41%)\n922,527 (35%)\n\n\n\n\n\n\n1 n (%)\n\n\n\n2 Pearson’s Chi-squared test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTotals Summary\n\ntable\nplot\n\n\n\nMembership Summary\n\ntable\nplot\n\n\n\nTest Association\n\ntable\n\n\n\n\n\n\n\n\nLooking at Table 8 and Figure 4, the warmer months appear to coincide with higher trip frequency, in total.\nIn Table 9 and Figure 5, trip frequency in both groups are impacted by the seasons. Although, it would appear that trip frequency of subscribers fluctuates less than for casuals. The disparity in frequency change is more apparent in the comparison of winter to summer months between member groups.\nGiven \\(p &lt; 0.05\\), it is likely that membership status is associated with a given member’s or non-member’s use of the service during a particular month or season. ?@tbl-chiMonths\n\n\n\n\n3.2.5 Totals Summary\n\n\n\nCodedplyr::tbl(dbconn, \"db/freq_month.db\") |&gt;\ngt::gt() |&gt;\ngt::tab_header(title = \"Monthly Trips Frequency\", subtitle = \"Tallies trips taken by month\") |&gt;\ngt::fmt_number(decimals = 0) |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\",\ncolumn_labels.hidden = TRUE\n)\n\n\nTable 8: Month Total Frequency\n\n\n\n\n\n\n\nMonthly Trips Frequency\n\n\nTallies trips taken by month\n\n\n\n\nJan\n136,886\n\n\nFeb\n136,818\n\n\nMar\n183,129\n\n\nApr\n286,343\n\n\nMay\n408,373\n\n\nJun\n474,756\n\n\nJul\n502,519\n\n\nAug\n519,423\n\n\nSep\n461,164\n\n\nOct\n374,268\n\n\nNov\n257,513\n\n\nDec\n156,206\n\n\n\n\n\n\n\n\n\n\n\n\nCodemonthlyTable &lt;- dplyr::tbl(dbconn, \"db/freq_month.db\") |&gt;\ndplyr::collect()\n    \nmonthlyTable |&gt;\nggplot2::ggplot(mapping = ggplot2::aes(x = months, y = n, fill = n)) +\nggplot2::geom_col(show.legend = FALSE) +\nggplot2::labs(title = \"Monthly Trip Frequency\", subtitle = \"A total count of trips taken by month\") +\nggplot2::scale_fill_distiller(palette = \"YlOrRd\") +\nggplot2::theme(\npanel.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\nplot.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\ntext = ggplot2::element_text(color = \"seashell\"),\npanel.grid = ggplot2::element_blank(),\naxis.title.x = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.title.y = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.text.x = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(1, 1, 1, 1), \"mm\")),\naxis.text.y = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(2, 2, 2, 2), \"mm\")),\naxis.ticks = ggplot2::element_line(color = \"LavenderBlush\"),\naxis.ticks.y = ggplot2::element_blank(),\npanel.grid.major.y = ggplot2::element_line(color = \"grey30\")\n)\n\n\n\n\n\n\nFigure 4: Month Total Frequency\n\n\n\n\n\n\n\n3.2.6 Membership Summary\n\n\n\nCodedplyr::tbl(dbconn, \"db/freqCompare_month.db\") |&gt;\ngt::gt(groupname_col = \"months\", row_group_as_column = TRUE) |&gt;\ngt::tab_header(title = \"Month to Membership Frequency\", subtitle = \"Grouped by sub status\") |&gt;\ngt::fmt_number(decimals = 0) |&gt;\ngt::cols_label(months = \"Month\", member_casual = \"Membership\") |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\",\ncolumn_labels.hidden = FALSE\n)\n\n\nTable 9: Month Group Frequency\n\n\n\n\n\n\n\nMonth to Membership Frequency\n\n\nGrouped by sub status\n\n\n\nMembership\nn\n\n\n\n\nJan\nmember\n111,624\n\n\ncasual\n25,262\n\n\nFeb\nmember\n109,707\n\n\ncasual\n27,111\n\n\nMar\ncasual\n39,137\n\n\nmember\n143,992\n\n\nApr\ncasual\n87,211\n\n\nmember\n199,132\n\n\nMay\nmember\n268,375\n\n\ncasual\n139,998\n\n\nJun\ncasual\n177,745\n\n\nmember\n297,011\n\n\nJul\ncasual\n194,030\n\n\nmember\n308,489\n\n\nAug\nmember\n329,860\n\n\ncasual\n189,563\n\n\nSep\nmember\n292,283\n\n\ncasual\n168,881\n\n\nOct\ncasual\n114,475\n\n\nmember\n259,793\n\n\nNov\ncasual\n64,508\n\n\nmember\n193,005\n\n\nDec\nmember\n123,506\n\n\ncasual\n32,700\n\n\n\n\n\n\n\n\n\n\n\n\nCodedplyr::tbl(dbconn, \"db/freqCompare_month.db\") |&gt;\ndplyr::collect() |&gt;\nggplot2::ggplot(mapping = ggplot2::aes(x = months, y = n, fill = n)) +\nggplot2::geom_col(show.legend = TRUE) +\nggplot2::facet_grid(rows = \"member_casual\") +\nggplot2::scale_fill_distiller(palette = \"YlGnBu\") +\nggplot2::labs(title = \"Month to Membership Frequency\", subtitle = \"Grouped by sub status\", x = \"Month\", y = \"Trips\") +\nggplot2::theme(\npanel.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\nplot.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\ntext = ggplot2::element_text(color = \"seashell\"),\npanel.grid = ggplot2::element_blank(),\naxis.title.x = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.title.y = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.text.x = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(1, 1, 1, 1), \"mm\")),\naxis.text.y = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(2, 2, 2, 2), \"mm\")),\naxis.ticks = ggplot2::element_line(color = \"LavenderBlush\"),\naxis.ticks.y = ggplot2::element_blank(),\npanel.grid.major.y = ggplot2::element_line(color = \"grey30\"),\nlegend.background = ggplot2::element_rect(fill = \"#222222\")\n)\n\n\n\n\n\n\nFigure 5: Month Group Frequency\n\n\n\n\n\n\n\n3.2.7 Testing the association between membership and month\n\nCodemonth_tbl &lt;- dplyr::tbl(dbconn, tblPath_fltrd, check_from = FALSE) |&gt;\ndplyr::select(member_casual, started_at) |&gt;\ndplyr::mutate(months = lubridate::month(started_at, label = TRUE, abbr = TRUE)) |&gt;\ndplyr::collect() |&gt;\ndplyr::mutate(months = forcats::as_factor(months), months = forcats::fct_inorder(months))\n\n# For finding chi-square p-value in a nicely formatted table\nmonth_tbl |&gt;\ndplyr::select(months, member_casual) |&gt;\ngtsummary::tbl_summary(by = member_casual, label = list(months = \"Month\", member_casual = \"Membership\")) |&gt;\ngtsummary::add_p() |&gt;\ngtsummary::as_gt() |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\")\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n\ncasual, N = 1,260,6211\n\n\nmember, N = 2,636,7771\n\n\np-value2\n\n\n\n\nMonth\n\n\n&lt;0.001\n\n\n    Jan\n25,262 (2.0%)\n111,624 (4.2%)\n\n\n\n    Feb\n27,111 (2.2%)\n109,707 (4.2%)\n\n\n\n    Mar\n39,137 (3.1%)\n143,992 (5.5%)\n\n\n\n    Apr\n87,211 (6.9%)\n199,132 (7.6%)\n\n\n\n    May\n139,998 (11%)\n268,375 (10%)\n\n\n\n    Jun\n177,745 (14%)\n297,011 (11%)\n\n\n\n    Jul\n194,030 (15%)\n308,489 (12%)\n\n\n\n    Aug\n189,563 (15%)\n329,860 (13%)\n\n\n\n    Sep\n168,881 (13%)\n292,283 (11%)\n\n\n\n    Oct\n114,475 (9.1%)\n259,793 (9.9%)\n\n\n\n    Nov\n64,508 (5.1%)\n193,005 (7.3%)\n\n\n\n    Dec\n32,700 (2.6%)\n123,506 (4.7%)\n\n\n\n\n\n\n1 n (%)\n\n\n\n2 Pearson’s Chi-squared test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTotals Summary\n\ntable\nplot\n\n\n\nMembership Summary\n\ntable\nplot\n\n\n\nTest Association\n\ntable\n\n\n\n\n\n\n\n\nIn Table 10 and Figure 6, there appears to be more trips taken in total between Tuesday through Saturday than Sunday through Monday.\nThe trend is more complicated in the weekday comparison groups seen in Table 11 and Figure 7. Trips taken by the casual group rises towards the weekend and dips on days corresponding to days when members are taking more trips. When members are less active, casual riders are more active.\nGiven, \\(p &lt; 0.05\\), the likelihood of using the service on a particular day depends on membership status. ?@tbl-chiDays\n\n\n\n\n3.2.8 Totals Summary\n\n\n\nCodedplyr::tbl(dbconn, \"db/freq_wkday.db\") |&gt;\ngt::gt() |&gt;\ngt::tab_header(title = \"Weekday Trip Frequency\", subtitle = \"Tallies trips taken by the day of the week\") |&gt;\ngt::fmt_number(decimals = 0) |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\",\ncolumn_labels.hidden = TRUE\n)\n\n\nTable 10: Weekday Total Frequency\n\n\n\n\n\n\n\nWeekday Trip Frequency\n\n\nTallies trips taken by the day of the week\n\n\n\n\nSun\n486,275\n\n\nMon\n507,355\n\n\nTue\n578,095\n\n\nWed\n585,266\n\n\nThu\n597,363\n\n\nFri\n566,008\n\n\nSat\n577,036\n\n\n\n\n\n\n\n\n\n\n\n\nCodeweekdayTable &lt;- dplyr::tbl(dbconn,\n           \"db/freq_wkday.db\") |&gt;\n    dplyr::collect()\n    \nweekdayTable |&gt;\nggplot2::ggplot(mapping = ggplot2::aes(x = wkday, y = n, fill = n)) +\nggplot2::coord_cartesian(ylim = c(4 * 10 ^ 5, NA)) +\nggplot2::geom_col(show.legend = FALSE) +\nggplot2::labs(title = \"Weekday Trip Frequency\", subtitle = \"Trips by day of week\") +\nggplot2::scale_fill_distiller(palette = \"YlOrRd\") +\nggplot2::theme(\npanel.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\nplot.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\ntext = ggplot2::element_text(color = \"seashell\"),\npanel.grid = ggplot2::element_blank(),\naxis.title.x = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.title.y = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.text.x = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(1, 1, 1, 1), \"mm\")),\naxis.text.y = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(2, 2, 2, 2), \"mm\")),\naxis.ticks = ggplot2::element_line(color = \"LavenderBlush\"),\naxis.ticks.y = ggplot2::element_blank(),\npanel.grid.major.y = ggplot2::element_line(color = \"grey30\")\n)\n\n\n\n\n\n\nFigure 6: Weekday Totals Frequency\n\n\n\n\n\n\n\n3.2.9 Membership Summary\n\n\n\nCodedplyr::tbl(dbconn, \"db/freqCompare_wkday.db\") |&gt;\ngt::gt(groupname_col = \"wkday\", row_group_as_column = TRUE) |&gt;\ngt::tab_header(title = \"Day to Membership Frequency\") |&gt;\ngt::cols_label(n = \"Trips\", member_casual = \"Membership\") |&gt;\ngt::fmt_number(decimals = 0) |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\",\ncolumn_labels.hidden = FALSE)\n\n\nTable 11: Weekday Group Frequency\n\n\n\n\n\n\n\nDay to Membership Frequency\n\n\n\nMembership\nTrips\n\n\n\n\nSun\nmember\n285,687\n\n\ncasual\n200,588\n\n\nMon\nmember\n364,495\n\n\ncasual\n142,860\n\n\nTue\nmember\n425,491\n\n\ncasual\n152,604\n\n\nWed\ncasual\n155,978\n\n\nmember\n429,288\n\n\nThu\ncasual\n169,117\n\n\nmember\n428,246\n\n\nFri\ncasual\n189,429\n\n\nmember\n376,579\n\n\nSat\ncasual\n250,045\n\n\nmember\n326,991\n\n\n\n\n\n\n\n\n\n\n\n\nCodedplyr::tbl(dbconn, \"db/freqCompare_wkday.db\") |&gt;\nggplot2::ggplot(mapping = ggplot2::aes(x = wkday, y = n, fill = n)) +\nggplot2::geom_col(show.legend = TRUE) +\nggplot2::facet_grid(rows = \"member_casual\") +\nggplot2::scale_fill_distiller(palette = \"YlGnBu\", \nname = \"Subscriber Status\") +\nggplot2::labs(title = \"Weekday to Membership Frequency\", subtitle = \"Grouped by sub status\", x = \"Day\", y = \"Trips\") +\nggplot2::theme(\npanel.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\nplot.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\ntext = ggplot2::element_text(color = \"seashell\"),\npanel.grid = ggplot2::element_blank(),\naxis.title.x = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.title.y = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.text.x = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(1, 1, 1, 1), \"mm\")),\naxis.text.y = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(2, 2, 2, 2), \"mm\")),\naxis.ticks = ggplot2::element_line(color = \"LavenderBlush\"),\naxis.ticks.y = ggplot2::element_blank(),\npanel.grid.major.y = ggplot2::element_line(color = \"grey30\"),\nlegend.background = ggplot2::element_rect(fill = \"#222222\"))\n\n\n\n\n\n\nFigure 7: Weekday Group Frequency\n\n\n\n\n\n\n\n3.2.10 Testing the association between day and membership\n\nCode# For the week days  comparison\nday_tbl &lt;- dplyr::tbl(dbconn, tblPath_fltrd, check_from = FALSE) |&gt;\ndplyr::select(member_casual, started_at) |&gt;\ndplyr::mutate(wkday = lubridate::wday(started_at, label = TRUE, abbr = TRUE)) |&gt;\ndplyr::collect() |&gt;\ndplyr::mutate(wkday = forcats::as_factor(wkday),\nwkday = forcats::fct_inorder(wkday))\n\nday_tbl |&gt;\ndplyr::select(wkday, member_casual) |&gt;\ngtsummary::tbl_summary(by = member_casual, label = list(wkday = \"Day\", member_casual = \"Membership\")) |&gt;\ngtsummary::add_p() |&gt;\ngtsummary::as_gt() |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\")\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n\ncasual, N = 1,260,6211\n\n\nmember, N = 2,636,7771\n\n\np-value2\n\n\n\n\nDay\n\n\n&lt;0.001\n\n\n    Sun\n200,588 (16%)\n285,687 (11%)\n\n\n\n    Mon\n142,860 (11%)\n364,495 (14%)\n\n\n\n    Tue\n152,604 (12%)\n425,491 (16%)\n\n\n\n    Wed\n155,978 (12%)\n429,288 (16%)\n\n\n\n    Thu\n169,117 (13%)\n428,246 (16%)\n\n\n\n    Fri\n189,429 (15%)\n376,579 (14%)\n\n\n\n    Sat\n250,045 (20%)\n326,991 (12%)\n\n\n\n\n\n\n1 n (%)\n\n\n\n2 Pearson’s Chi-squared test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTotals Summary\n\ntable\nplot\n\n\n\nMembership Summary\n\ntable\nplot\n\n\n\nTest Association\n\ntable\n\n\n\n\n\n\n\n\nThe overall trend follows the typical work day cycle where one would expect to see with spikes in the mornings and evenings. Table 12 Figure 8\nThere is a noted discrepency between member and casual use during peak commute hours. Members have more notable spike during morning commute hours than casuals, which appears more flat throughout the day. Table 13 Figure 9\n\n\n\n\n3.2.11 Totals Summary\n\n\n\nCodehours_of_Riders |&gt;\ndplyr::select(hour, Total_Riders) |&gt;\ngt::gt() |&gt;\ngt::tab_header(\ntitle = \"Hour Frequency\", \nsubtitle = \"Counts trips taken by the hour of day\"\n) |&gt;\ngt::fmt_number(decimals = 0) |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\",\ncolumn_labels.hidden = TRUE\n)\n\n\nTable 12: Total freqeuncy by the hour of day\n\n\n\n\n\n\n\nHour Frequency\n\n\nCounts trips taken by the hour of day\n\n\n\n\n12 am\n42,202\n\n\n1 am\n25,567\n\n\n2 am\n14,358\n\n\n3 am\n8,184\n\n\n4 am\n8,584\n\n\n5 am\n33,019\n\n\n6 am\n100,702\n\n\n7 am\n187,713\n\n\n8 am\n233,741\n\n\n9 am\n164,160\n\n\n10 am\n160,065\n\n\n11 am\n192,595\n\n\n12 pm\n221,801\n\n\n1 pm\n223,888\n\n\n2 pm\n228,562\n\n\n3 pm\n274,134\n\n\n4 pm\n359,672\n\n\n5 pm\n414,664\n\n\n6 pm\n326,733\n\n\n7 pm\n229,167\n\n\n8 pm\n159,228\n\n\n9 pm\n125,434\n\n\n10 pm\n98,568\n\n\n11 pm\n64,657\n\n\n\n\n\n\n\n\n\n\n\n\nCodehours_of_Riders |&gt;\nggplot2::ggplot(\nmapping = ggplot2::aes(\nx = reorder(hour, .data$index),\ny = Total_Riders,\nfill = Total_Riders\n)\n) +\nggplot2::geom_col(show.legend = FALSE) +\n#ggplot2::coord_radial(start = 2 * pi, inner.radius = .2) +\nggplot2::scale_fill_distiller(palette = \"YlOrRd\") +\nggplot2::scale_x_discrete(guide = ggplot2::guide_axis(n.dodge = 1, angle = 45)) +\nggplot2::labs(title = \"Average Riders by the Hour of Day\", x = \"Hour\", y = \"Trips\") +\nggplot2::theme(\npanel.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\nplot.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\ntext = ggplot2::element_text(color = \"seashell\"),\npanel.grid = ggplot2::element_blank(),\naxis.title.x = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.title.y = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.text.x = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(1, 1, 1, 1), \"mm\")),\naxis.text.y = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(2, 2, 2, 2), \"mm\")),\naxis.ticks = ggplot2::element_line(color = \"LavenderBlush\"),\naxis.ticks.y = ggplot2::element_blank(),\npanel.grid.major.y = ggplot2::element_line(color = \"grey30\")\n)\n\n\n\n\n\n\nFigure 8: Total frequency by hour of day.\n\n\n\n\n\n\n\n3.2.12 Membership Summary\n\n\n\nCodehour_tbl &lt;- \ndplyr::tbl(dbconn, \"db/freqCompare_hours.db\") |&gt;\ndplyr::collect() |&gt;\ndplyr::mutate(\nhour = forcats::as_factor(hour), \nhour = forcats::fct_inorder(hour),\nTotal_Riders = as.integer(Total_Riders)\n)\n\nx &lt;-\nstringr::str_sub_all(hour_tbl[[2]], start = 1, end = 2) |&gt;\nas.character() |&gt;\nstringr::str_remove(pattern = \"^0\")\n\n\ny &lt;- \nstringr::str_sub(hour_tbl[[2]], start = -2, end = -1) |&gt;\nstringr::str_to_lower()\n\nsimpleTimes &lt;- stringr::str_c(x, sep = \" \", y)\n\nhour_tbl[[2]] &lt;- simpleTimes\n\nhour_tbl &lt;- hour_tbl |&gt;\ndplyr::mutate(\nhour = forcats::as_factor(hour),\nhour = forcats::fct_inorder(hour)\n)\n\nhour_tbl |&gt;\ndplyr::select(member_casual:Total_Riders) |&gt;\ngt::gt(\ngroupname_col = \"hour\", \nrow_group_as_column = TRUE\n) |&gt;\ngt::fmt_number(decimals = 0) |&gt;\ngt::tab_header(\ntitle = \"Hour to Membership Frequency\",\nsubtitle = \"Counts total trips by membership\") |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\",\ncolumn_labels.hidden = TRUE\n)\n\n\nTable 13: Grouped hour frequency\n\n\n\n\n\n\n\nHour to Membership Frequency\n\n\nCounts total trips by membership\n\n\n\n\n12 am\ncasual\n20,281\n\n\nmember\n21,921\n\n\n1 am\ncasual\n13,046\n\n\nmember\n12,521\n\n\n2 am\ncasual\n7,551\n\n\nmember\n6,807\n\n\n3 am\ncasual\n3,856\n\n\nmember\n4,328\n\n\n4 am\ncasual\n3,064\n\n\nmember\n5,520\n\n\n5 am\ncasual\n7,455\n\n\nmember\n25,564\n\n\n6 am\ncasual\n19,864\n\n\nmember\n80,838\n\n\n7 am\ncasual\n35,453\n\n\nmember\n152,260\n\n\n8 am\ncasual\n47,052\n\n\nmember\n186,689\n\n\n9 am\ncasual\n43,598\n\n\nmember\n120,562\n\n\n10 am\ncasual\n53,505\n\n\nmember\n106,560\n\n\n11 am\ncasual\n67,479\n\n\nmember\n125,116\n\n\n12 pm\ncasual\n79,939\n\n\nmember\n141,862\n\n\n1 pm\ncasual\n82,677\n\n\nmember\n141,211\n\n\n2 pm\ncasual\n85,660\n\n\nmember\n142,902\n\n\n3 pm\ncasual\n96,286\n\n\nmember\n177,848\n\n\n4 pm\ncasual\n114,828\n\n\nmember\n244,844\n\n\n5 pm\ncasual\n127,231\n\n\nmember\n287,433\n\n\n6 pm\ncasual\n106,319\n\n\nmember\n220,414\n\n\n7 pm\ncasual\n76,259\n\n\nmember\n152,908\n\n\n8 pm\ncasual\n54,272\n\n\nmember\n104,956\n\n\n9 pm\ncasual\n45,566\n\n\nmember\n79,868\n\n\n10 pm\ncasual\n40,572\n\n\nmember\n57,996\n\n\n11 pm\ncasual\n28,808\n\n\nmember\n35,849\n\n\n\n\n\n\n\n\n\n\n\n\nCodehour_tbl |&gt;\nggplot2::ggplot(ggplot2::aes(x = hour, y = Total_Riders, fill = Total_Riders)) +\nggplot2::geom_col(show.legend = TRUE) +\nggplot2::facet_grid(rows = \"member_casual\") +\nggplot2::scale_fill_distiller(palette = \"YlGnBu\", name = NULL) +\nggplot2::scale_x_discrete(guide = ggplot2::guide_axis(n.dodge = 1, angle = 45)) +\nggplot2::labs(title = \"Hour to Membership Count\", x = \"Hour\", y = \"Trips\") +\nggplot2::theme(\npanel.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\nplot.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\ntext = ggplot2::element_text(color = \"seashell\"),\npanel.grid = ggplot2::element_blank(),\naxis.title.x = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.title.y = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.text.x = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(1, 1, 1, 1), \"mm\")),\naxis.text.y = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(2, 2, 2, 2), \"mm\")),\naxis.ticks = ggplot2::element_line(color = \"LavenderBlush\"),\naxis.ticks.y = ggplot2::element_blank(),\npanel.grid.major.y = ggplot2::element_line(color = \"grey30\"),\nlegend.background = ggplot2::element_rect(fill = \"#222222\"),\npanel.spacing = ggplot2::unit(4, \"mm\")\n)\n\n\n\n\n\n\nFigure 9: Grouped hour frequency\n\n\n\n\n\n\n\n3.2.13 Can the hour of the day predict membership?\n\nCodehour_tbl &lt;- dplyr::tbl(dbconn, tblPath_fltrd, check_from = FALSE) |&gt;\ndplyr::select(started_at, member_casual) |&gt;\ndplyr::mutate(\"hour\" = lubridate::hour(started_at)) |&gt;\ndplyr::arrange(hour) |&gt;\ndplyr::collect() |&gt;\ndplyr::mutate(\nhour = hms::hms(hours = hour),\n# Need the 12 hour clock times\nhour = format(strptime(hour, format = \"%H\"), \"%r\"),\nhour = forcats::as_factor(hour),\nhour = forcats::fct_inorder(hour)\n)\n\nx &lt;-\nstringr::str_sub_all(hour_tbl[[3]], start = 1, end = 2) |&gt;\nas.character() |&gt;\nstringr::str_remove(pattern = \"^0\")\n\n\ny &lt;- \nstringr::str_sub(hour_tbl[[3]], start = -2, end = -1) |&gt;\nstringr::str_to_lower()\n\nsimpleTimes &lt;- stringr::str_c(x, sep = \" \", y)\n\nhour_tbl[[3]] &lt;- simpleTimes\n\n\nhour_tbl |&gt;\ndplyr::select(hour, member_casual) |&gt;\ngtsummary::tbl_summary(by = member_casual, label = list(hour = \"Hour\", member_casual = \"Membership\")) |&gt;\ngtsummary::add_p() |&gt;\ngtsummary::as_gt() |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\")\n\n\nTable 14: Can the hour of the day correlate to a binary outcome, such as membership?\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n\ncasual, N = 1,260,6211\n\n\nmember, N = 2,636,7771\n\n\np-value2\n\n\n\n\nHour\n\n\n&lt;0.001\n\n\n    1 am\n13,046 (1.0%)\n12,521 (0.5%)\n\n\n\n    1 pm\n82,677 (6.6%)\n141,211 (5.4%)\n\n\n\n    10 am\n53,505 (4.2%)\n106,560 (4.0%)\n\n\n\n    10 pm\n40,572 (3.2%)\n57,996 (2.2%)\n\n\n\n    11 am\n67,479 (5.4%)\n125,116 (4.7%)\n\n\n\n    11 pm\n28,808 (2.3%)\n35,849 (1.4%)\n\n\n\n    12 am\n20,281 (1.6%)\n21,921 (0.8%)\n\n\n\n    12 pm\n79,939 (6.3%)\n141,862 (5.4%)\n\n\n\n    2 am\n7,551 (0.6%)\n6,807 (0.3%)\n\n\n\n    2 pm\n85,660 (6.8%)\n142,902 (5.4%)\n\n\n\n    3 am\n3,856 (0.3%)\n4,328 (0.2%)\n\n\n\n    3 pm\n96,286 (7.6%)\n177,848 (6.7%)\n\n\n\n    4 am\n3,064 (0.2%)\n5,520 (0.2%)\n\n\n\n    4 pm\n114,828 (9.1%)\n244,844 (9.3%)\n\n\n\n    5 am\n7,455 (0.6%)\n25,564 (1.0%)\n\n\n\n    5 pm\n127,231 (10%)\n287,433 (11%)\n\n\n\n    6 am\n19,864 (1.6%)\n80,838 (3.1%)\n\n\n\n    6 pm\n106,319 (8.4%)\n220,414 (8.4%)\n\n\n\n    7 am\n35,453 (2.8%)\n152,260 (5.8%)\n\n\n\n    7 pm\n76,259 (6.0%)\n152,908 (5.8%)\n\n\n\n    8 am\n47,052 (3.7%)\n186,689 (7.1%)\n\n\n\n    8 pm\n54,272 (4.3%)\n104,956 (4.0%)\n\n\n\n    9 am\n43,598 (3.5%)\n120,562 (4.6%)\n\n\n\n    9 pm\n45,566 (3.6%)\n79,868 (3.0%)\n\n\n\n\n\n\n1 n (%)\n\n\n\n2 Pearson’s Chi-squared test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTotals Summary\n\ntable\nplot\n\n\n\nMembership Summary\n\ntable\nplot\n\n\n\nTest Association\n\ntable\n\n\n\n\n\n\n\n\nThe distance of most observed trips in Table 15 and Figure 10 fall in between 0.3 to 3 miles.\nThe groups comparison seen in Table 16 and Figure 11 show the same pattern. The casual and member differ mainly in overall scale of trips taken between the 0.3 and 3 mile trip distances.\n\\(\\beta_1 &lt; 0\\), members are less likely to ride as distance traveled in a given trip increases. So, members tend to take shorter trips compared to casual users. ?@tbl-milesLog\n\n\n\n\n\n\n\n3.2.14 Totals Summary\n\n\n\nCodedplyr::tbl(dbconn, \"db/freq_miles.db\") |&gt;\ndplyr::arrange(miles) |&gt;\ndplyr::collect() |&gt;\ndplyr::mutate(\n#n = n / 1000,\nmiles = forcats::as_factor(miles),\nmiles = forcats::fct_inorder(miles)\n) |&gt;\ngt::gt() |&gt;\ngt::cols_label(miles = \"Miles\", n = \"Trips\") |&gt;\ngt::fmt_number(decimals = 0) |&gt;\ngt::tab_header(title = \"Distance Frequency\", subtitle = \"Distance is measured in miles\") |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\"\n)\n\n\nTable 15: Miles Total Frequency\n\n\n\n\n\n\n\nDistance Frequency\n\n\nDistance is measured in miles\n\n\nMiles\nTrips\n\n\n\n\n0.1\n11,429\n\n\n0.2\n70,621\n\n\n0.3\n178,150\n\n\n0.4\n225,723\n\n\n0.5\n280,367\n\n\n0.6\n288,164\n\n\n0.7\n250,369\n\n\n0.8\n262,418\n\n\n0.9\n227,646\n\n\n1\n867,678\n\n\n2\n720,842\n\n\n3\n292,483\n\n\n4\n121,920\n\n\n5\n55,748\n\n\n6\n25,499\n\n\n7\n11,924\n\n\n8\n3,275\n\n\n9\n1,520\n\n\n10\n686\n\n\n11\n415\n\n\n12\n256\n\n\n13\n139\n\n\n14\n67\n\n\n15\n24\n\n\n16\n31\n\n\n17\n1\n\n\n18\n1\n\n\n19\n1\n\n\n21\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCodedplyr::tbl(dbconn, \"db/freq_miles.db\") |&gt;\ndplyr::collect() |&gt;\ndplyr::mutate(\nn = n / 1000,\nmiles = forcats::as_factor(miles),\nmiles = forcats::fct_inorder(miles)\n) |&gt;\ndplyr::rename(\"Trips (in thousands)\" = n, \"Miles\" = miles) |&gt;\nggplot2::ggplot(mapping = ggplot2::aes(x = Miles, y = `Trips (in thousands)`, fill = `Trips (in thousands)`)) +\nggplot2::geom_col(show.legend = FALSE) +\nggplot2::scale_fill_distiller(palette = \"YlOrRd\") +\nggplot2::labs(title = \"Trip Distance Frequency\", subtitle = \"Measured in miles\") +\nggplot2::scale_x_discrete(guide = ggplot2::guide_axis(n.dodge = 1, angle = 45)) +\nggplot2::theme(\npanel.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\nplot.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\ntext = ggplot2::element_text(color = \"seashell\"),\npanel.grid = ggplot2::element_blank(),\naxis.title.x = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.title.y = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.text.x = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(1, 1, 1, 1), \"mm\")),\naxis.text.y = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(2, 2, 2, 2), \"mm\")),\naxis.ticks = ggplot2::element_line(color = \"LavenderBlush\"),\naxis.ticks.y = ggplot2::element_blank(),\npanel.grid.major.y = ggplot2::element_line(color = \"grey30\")\n)\n\n\n\n\n\n\nFigure 10: Miles Total Frequency\n\n\n\n\n\n\n\n3.2.15 Membership Summary\n\n\n\nCodedplyr::tbl(dbconn, \"db/freqCompare_miles.db\") |&gt;\ndplyr::arrange(miles) |&gt;\ngt::gt(groupname_col = \"miles\", row_group_as_column = TRUE) |&gt;\ngt::tab_header(title = \"Distance by Membership\", subtitle = \"Measured in miles.\") |&gt;\ngt::fmt_number(decimals = 0, ) |&gt;\ngt::cols_label(n = \"Trips\") |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\",\ncolumn_labels.hidden = FALSE\n)\n# For the miles group frequency membership comparison\nmilesCompare_tbl &lt;- dplyr::tbl(dbconn, tblPath_fltrd, check_from = FALSE) |&gt;\ndplyr::select(member_casual, miles) |&gt;\ndplyr::collect() |&gt;\ndplyr::mutate(miles = dplyr::case_when(\nmiles &gt;= 1 ~ round(miles, digits = 0),\nmiles &lt; 1 ~ round(signif(miles, 3), digits = 1)\n)) |&gt;\ndplyr::arrange(miles) |&gt;\ndplyr::mutate(\nmiles = forcats::as_factor(miles),\nmiles = forcats::fct_inorder(miles)\n)\n\nmiles_compareSummary &lt;- milesCompare_tbl |&gt;\ndplyr::select(miles, member_casual) |&gt;\ngtsummary::tbl_summary(\nby = member_casual, \nlabel = list(member_casual = \"Membership\")\n)\n\n# miles_compareSummary\n\n\nTable 16: Miles Group Frequency\n\n\n\n\n\n\n\nDistance by Membership\n\n\nMeasured in miles.\n\n\n\nmember_casual\nTrips\n\n\n\n\n0.1\ncasual\n1,410\n\n\nmember\n10,019\n\n\n0.2\ncasual\n11,262\n\n\nmember\n59,359\n\n\n0.3\ncasual\n34,957\n\n\nmember\n143,193\n\n\n0.4\ncasual\n54,395\n\n\nmember\n171,328\n\n\n0.5\ncasual\n75,269\n\n\nmember\n205,098\n\n\n0.6\ncasual\n83,008\n\n\nmember\n205,156\n\n\n0.7\ncasual\n76,686\n\n\nmember\n173,683\n\n\n0.8\ncasual\n91,896\n\n\nmember\n170,522\n\n\n0.9\ncasual\n77,635\n\n\nmember\n150,011\n\n\n1\ncasual\n316,382\n\n\nmember\n551,296\n\n\n2\ncasual\n261,540\n\n\nmember\n459,302\n\n\n3\ncasual\n99,452\n\n\nmember\n193,031\n\n\n4\ncasual\n39,690\n\n\nmember\n82,230\n\n\n5\ncasual\n18,589\n\n\nmember\n37,159\n\n\n6\ncasual\n9,393\n\n\nmember\n16,106\n\n\n7\ncasual\n5,492\n\n\nmember\n6,432\n\n\n8\ncasual\n1,706\n\n\nmember\n1,569\n\n\n9\ncasual\n789\n\n\nmember\n731\n\n\n10\ncasual\n433\n\n\nmember\n253\n\n\n11\ncasual\n273\n\n\nmember\n142\n\n\n12\ncasual\n170\n\n\nmember\n86\n\n\n13\ncasual\n92\n\n\nmember\n47\n\n\n14\ncasual\n49\n\n\nmember\n18\n\n\n15\ncasual\n22\n\n\nmember\n2\n\n\n16\ncasual\n27\n\n\nmember\n4\n\n\n17\ncasual\n1\n\n\n18\ncasual\n1\n\n\n19\ncasual\n1\n\n\n21\ncasual\n1\n\n\n\n\n\n\n\n\n\n\n\n\nCodemilesCompare_tbl |&gt;\ndplyr::group_by(miles, member_casual) |&gt;\ndplyr::summarize(n = dplyr::n()) |&gt;\ndplyr::ungroup() |&gt;\nggplot2::ggplot(mapping = ggplot2::aes(x = miles, y = n, fill = n)) +\nggplot2::geom_col(show.legend = FALSE) +\nggplot2::facet_grid(rows = ggplot2::vars(member_casual)) +\nggplot2::scale_fill_distiller(palette = \"YlGnBu\", name = \"Subscriber Status\") +\nggplot2::scale_x_discrete(guide = ggplot2::guide_axis(n.dodge = 1, angle = 45)) +\nggplot2::labs(title = \"Miles to Membership Frequency\", subtitle = \"Grouped by sub status\") +\nggplot2::theme(\npanel.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\nplot.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\ntext = ggplot2::element_text(color = \"seashell\"),\npanel.grid = ggplot2::element_blank(),\naxis.title.x = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.title.y = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.text.x = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(1, 1, 1, 1), \"mm\")),\naxis.text.y = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(2, 2, 2, 2), \"mm\")),\naxis.ticks = ggplot2::element_line(color = \"LavenderBlush\"),\naxis.ticks.y = ggplot2::element_blank(),\npanel.grid.major.y = ggplot2::element_line(color = \"grey30\"),\nlegend.background = ggplot2::element_rect(fill = \"#222222\")\n)\n\n\n\n\n\n\nFigure 11: Miles Group Frequency\n\n\n\n\n\n\n\n3.2.16 Can distance predict a binary outcome?\n\nCodemiles_asNums &lt;- dplyr::tbl(dbconn, tblPath_fltrd, check_from = FALSE) |&gt;\ndplyr::select(member_casual, miles) |&gt;\ndplyr::collect() |&gt;\ndplyr::mutate(miles = dplyr::case_when(\nmiles &gt;= 1 ~ round(miles, digits = 0),\nmiles &lt; 1 ~ round(signif(miles, 3), digits = 1)\n)) |&gt;\ndplyr::arrange(miles)\n\nmiles_asNums$member_casual &lt;- stringr::str_replace(miles_asNums$member_casual, pattern = \"casual\", \"0\")\n\nmiles_asNums$member_casual &lt;- stringr::str_replace(miles_asNums$member_casual, pattern = \"member\", \"1\")\n\nmiles_asNums$member_casual &lt;- miles_asNums$member_casual |&gt; as.integer()\n\nmiles_asNums$member_casual &lt;- factor(\nmiles_asNums$member_casual,\nlevels = c(0, 1),\nlabels = c(\"casual\", \"member\")\n)\n\nmilesModel &lt;- stats::glm(member_casual ~ miles, data = miles_asNums, family = binomial)\n\n# summary(milesModel)$coefficients\n\nmileStats_tbl &lt;- milesModel |&gt;\ngtsummary::tbl_regression(label = list(miles = \"Miles\", member_casual = \"Membership\"))\n\n\nmileStats_tbl |&gt;\ngtsummary::as_gt() |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\")\n\n\n\n\n\nCharacteristic\n\nlog(OR)1\n\n\n95% CI1\n\np-value\n\n\nMiles\n-0.10\n-0.10, -0.10\n&lt;0.001\n\n\n\n1 OR = Odds Ratio, CI = Confidence Interval\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTotals Summary\n\ntable\nplot\n\n\n\nMembership Summary\n\ntable\nplot\n\n\n\nTest Association\n\ntable\n\n\n\n\n\n\n\n\nThe majority of mph observations fall in between 2-12 mph, as seen in Table 17 and Figure 12.\nMember mph observations skew towards a higher mph than casual riders, as seen in Table 18 and Figure 13.\nGiven, \\(\\beta_1 &gt; 0\\), members tend to have a higher estimated average speed for the duration of their trips compared to casuals. ?@tbl-mphLog\n\n\n\n\n3.2.17 Totals Summary\n\n\n\nCodedplyr::tbl(dbconn, \"db/freq_mph.db\") |&gt;\ndplyr::arrange(mph) |&gt;\ngt::gt() |&gt;\ngt::tab_header(title = \"Mean Speed Frequency\", subtitle = \"Calculated average speed over the duration of the trip\") |&gt;\ngt::fmt_number(decimals = 0) |&gt;\ngt::cols_label(mph = \"Mph\", n = \"Trips\") |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\",\ncolumn_labels.hidden = FALSE\n)\n\n\nTable 17: Mph Total Frequency\n\n\n\n\n\n\n\nMean Speed Frequency\n\n\nCalculated average speed over the duration of the trip\n\n\nMph\nTrips\n\n\n\n\n1\n45,485\n\n\n2\n106,779\n\n\n3\n161,520\n\n\n4\n278,819\n\n\n5\n460,475\n\n\n6\n622,275\n\n\n7\n647,253\n\n\n8\n546,353\n\n\n9\n399,237\n\n\n10\n265,438\n\n\n11\n165,825\n\n\n12\n99,529\n\n\n13\n55,660\n\n\n14\n27,274\n\n\n15\n11,165\n\n\n16\n3,354\n\n\n17\n714\n\n\n18\n138\n\n\n19\n69\n\n\n20\n36\n\n\n\n\n\n\n\n\n\n\n\n\nCodemphTable &lt;- dplyr::tbl(dbconn,\n                       \"db/freq_mph.db\") |&gt;\ndplyr::collect()\nmphPlot &lt;- mphTable |&gt;\nggplot2::ggplot(mapping = ggplot2::aes(x = mph, y = n, color = n)) +\nggplot2::geom_point(show.legend = FALSE) +\nggplot2::labs(title = \"Mean Speed Frequency\", subtitle = \"Calculated average speed over the duration of the trip\", x = \"Miles per Hour\", y = \"Trips\") +\nggplot2::scale_color_distiller(palette = \"YlOrRd\") +\nggplot2::theme(\npanel.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\nplot.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\ntext = ggplot2::element_text(color = \"seashell\"),\npanel.grid = ggplot2::element_blank(),\naxis.title.x = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.title.y = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.text.x = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(1, 1, 1, 1), \"mm\")),\naxis.text.y = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(2, 2, 2, 2), \"mm\")),\naxis.ticks = ggplot2::element_line(color = \"LavenderBlush\"),\naxis.ticks.y = ggplot2::element_blank(),\npanel.grid.major.y = ggplot2::element_line(color = \"grey30\")\n)\n\nmphPlot\n\n\n\n\n\n\nFigure 12: Mph Total Frequency\n\n\n\n\n\n\n\n3.2.18 Membership Summary\n\n\n\nCodedplyr::tbl(dbconn, \"db/freqCompare_mph.db\") |&gt;\ndplyr::arrange(mph, member_casual) |&gt;\ndplyr::collect() |&gt;\ngt::gt(groupname_col = \"mph\", row_group_as_column = TRUE) |&gt;\ngt::tab_header(title = \"Mph - Membership\") |&gt;\ngt::fmt_number(decimals = 0) |&gt;\ngt::cols_label(mph = \"Mph\", member_casual = \"Membership\", n = \"Trips\") |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\",\ncolumn_labels.hidden = FALSE)\n\n\nTable 18: Mph Group Frequency\n\n\n\n\n\n\n\nMph - Membership\n\n\n\nMembership\nTrips\n\n\n\n\n1\ncasual\n28,675\n\n\nmember\n16,810\n\n\n2\ncasual\n67,464\n\n\nmember\n39,315\n\n\n3\ncasual\n93,694\n\n\nmember\n67,826\n\n\n4\ncasual\n128,134\n\n\nmember\n150,685\n\n\n5\ncasual\n166,759\n\n\nmember\n293,716\n\n\n6\ncasual\n191,146\n\n\nmember\n431,129\n\n\n7\ncasual\n179,540\n\n\nmember\n467,713\n\n\n8\ncasual\n144,296\n\n\nmember\n402,057\n\n\n9\ncasual\n102,522\n\n\nmember\n296,715\n\n\n10\ncasual\n67,961\n\n\nmember\n197,477\n\n\n11\ncasual\n42,345\n\n\nmember\n123,480\n\n\n12\ncasual\n24,981\n\n\nmember\n74,548\n\n\n13\ncasual\n13,475\n\n\nmember\n42,185\n\n\n14\ncasual\n6,305\n\n\nmember\n20,969\n\n\n15\ncasual\n2,402\n\n\nmember\n8,763\n\n\n16\ncasual\n693\n\n\nmember\n2,661\n\n\n17\ncasual\n171\n\n\nmember\n543\n\n\n18\ncasual\n38\n\n\nmember\n100\n\n\n19\ncasual\n12\n\n\nmember\n57\n\n\n20\ncasual\n8\n\n\nmember\n28\n\n\n\n\n\n\n\n\n\n\n\n\nCodedplyr::tbl(dbconn, \"db/freqCompare_mph.db\") |&gt;\ndplyr::arrange(mph, member_casual) |&gt;\ndplyr::collect() |&gt;\nggplot2::ggplot(mapping = ggplot2::aes(x = mph, y = n, color = member_casual)) +\nggplot2::geom_line() +\nggplot2::scale_color_brewer(palette = \"Paired\", name = NULL) +\nggplot2::labs(title = \"Mph to Membership Frequency\", subtitle = \"Grouped by sub status\", x = \"Miles per Hour\", y = \"Trips\") +\nggplot2::theme(\npanel.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\nplot.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\ntext = ggplot2::element_text(color = \"seashell\"),\npanel.grid = ggplot2::element_blank(),\naxis.title.x = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.title.y = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.text.x = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(1, 1, 1, 1), \"mm\")),\naxis.text.y = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(2, 2, 2, 2), \"mm\")),\naxis.ticks = ggplot2::element_line(color = \"LavenderBlush\"),\naxis.ticks.y = ggplot2::element_blank(),\npanel.grid.major.y = ggplot2::element_line(color = \"grey30\"),\nlegend.background = ggplot2::element_rect(fill = \"#222222\"))\n\n\n\n\n\n\nFigure 13: Mph Group Frequency\n\n\n\n\n\n\n\n3.2.19 Can travel speed predict a binary outcome\n\nCodemph_asNums &lt;- dplyr::tbl(dbconn, tblPath_fltrd, check_from = FALSE) |&gt;\ndplyr::select(mph, member_casual) |&gt;\ndplyr::mutate(mph = round(mph, digits = 0)) |&gt;\ndplyr::arrange(mph) |&gt;\ndplyr::collect()\n\n\nmph_asNums$member_casual &lt;- stringr::str_replace(mph_asNums$member_casual, pattern = \"casual\", \"0\")\n\nmph_asNums$member_casual &lt;- stringr::str_replace(mph_asNums$member_casual, pattern = \"member\", \"1\")\n\nmph_asNums$member_casual &lt;- mph_asNums$member_casual |&gt; as.integer()\n\nmph_asNums$member_casual &lt;- factor(\nmph_asNums$member_casual,\nlevels = c(0, 1),\nlabels = c(\"casual\", \"member\")\n)\n\nmphModel &lt;- stats::glm(member_casual ~ mph, data = mph_asNums, family = binomial)\n\nmphStats_tbl &lt;- mphModel |&gt;\ngtsummary::tbl_regression(label = list(mph = \"Mph\", member_casual = \"Membership\"))\n\nmphStats_tbl |&gt;\ngtsummary::as_gt() |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\")\n\n\n\n\n\nCharacteristic\n\nlog(OR)1\n\n\n95% CI1\n\np-value\n\n\nMph\n0.15\n0.15, 0.15\n&lt;0.001\n\n\n\n1 OR = Odds Ratio, CI = Confidence Interval\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTotals Summary\n\ntable\nplot\n\n\n\nMembership Summary\n\ntable\nplot\n\n\n\nTest Association\n\ntable\n\n\n\n\n\n\n\n\nThe time riders are usually spending on these trips lies between 5 to 15 minutes, as seen in Table 19 and Figure 14.\nThe groups as seen in Table 20 and Figure 15 both follow the totals pattern, largely. At the 42 minute mark in the table and plot, the casual riders count becomes greater than for members. Though members ride more frequently, casual riders are more likely to take longer trips.\nGiven, \\(\\beta_1 &lt; 0\\), members are more likely to take shorter trips in terms of how many minutes they ride for on their trips than casuals. ?@tbl-triptimesLog\n\n\n\n\n\n\n\n3.2.20 Totals Summary\n\n\n\nCodedplyr::tbl(dbconn, \"db/freq_tripTime.db\") |&gt;\ndplyr::collect() |&gt;\ndplyr::arrange(trip_time) |&gt;\n#head(n = 20) |&gt;\ngt::gt() |&gt;\ngt::tab_header(title = \"Duration Totals\") |&gt;\ngt::fmt_number(decimals = 0) |&gt;\ngt::cols_label(trip_time = \"Minutes\", n = \"Trips\") |&gt;\ngt::cols_align(columns = \"trip_time\", align = \"center\") |&gt;\ngt::fmt_number(decimals = 0) |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\",\ntable.width = gt::pct(25),\ncolumn_labels.hidden = FALSE,\nrow.striping.include_table_body = TRUE\n) |&gt;\ngt::tab_footnote(\n\"Total trips taken for the given duration.\",\nlocations =   gt::cells_column_labels(columns = \"n\")\n)\n\n\nTable 19: Trip-Time Totals\n\n\n\n\n\n\n\nDuration Totals\n\n\nMinutes\nTrips1\n\n\n\n\n\n1\n11,712\n\n\n2\n106,938\n\n\n3\n214,975\n\n\n4\n277,279\n\n\n5\n293,803\n\n\n6\n286,755\n\n\n7\n269,364\n\n\n8\n248,761\n\n\n9\n225,902\n\n\n10\n203,172\n\n\n11\n180,040\n\n\n12\n159,778\n\n\n13\n142,474\n\n\n14\n126,117\n\n\n15\n111,231\n\n\n16\n98,928\n\n\n17\n87,472\n\n\n18\n78,248\n\n\n19\n70,288\n\n\n20\n62,967\n\n\n21\n56,145\n\n\n22\n51,046\n\n\n23\n46,266\n\n\n24\n41,930\n\n\n25\n37,707\n\n\n26\n34,099\n\n\n27\n31,159\n\n\n28\n28,173\n\n\n29\n25,586\n\n\n30\n23,348\n\n\n31\n21,507\n\n\n32\n19,384\n\n\n33\n18,120\n\n\n34\n16,128\n\n\n35\n14,874\n\n\n36\n13,446\n\n\n37\n12,419\n\n\n38\n11,673\n\n\n39\n10,611\n\n\n40\n9,615\n\n\n41\n8,863\n\n\n42\n8,040\n\n\n43\n7,196\n\n\n44\n6,589\n\n\n45\n5,938\n\n\n46\n5,279\n\n\n47\n4,670\n\n\n48\n4,354\n\n\n49\n4,007\n\n\n50\n3,671\n\n\n51\n3,329\n\n\n52\n3,044\n\n\n53\n2,905\n\n\n54\n2,738\n\n\n55\n2,510\n\n\n56\n2,319\n\n\n57\n2,168\n\n\n58\n2,037\n\n\n59\n1,928\n\n\n60\n1,852\n\n\n61\n1,650\n\n\n62\n1,557\n\n\n63\n1,438\n\n\n64\n1,442\n\n\n65\n1,269\n\n\n66\n1,213\n\n\n67\n1,138\n\n\n68\n1,151\n\n\n69\n1,000\n\n\n70\n945\n\n\n71\n924\n\n\n72\n850\n\n\n73\n851\n\n\n74\n826\n\n\n75\n764\n\n\n76\n732\n\n\n77\n670\n\n\n78\n682\n\n\n79\n629\n\n\n80\n617\n\n\n81\n600\n\n\n82\n556\n\n\n83\n510\n\n\n84\n467\n\n\n85\n455\n\n\n86\n471\n\n\n87\n439\n\n\n88\n376\n\n\n89\n422\n\n\n90\n382\n\n\n91\n343\n\n\n92\n350\n\n\n93\n305\n\n\n94\n302\n\n\n95\n267\n\n\n96\n270\n\n\n97\n241\n\n\n98\n260\n\n\n99\n235\n\n\n100\n216\n\n\n101\n242\n\n\n102\n241\n\n\n103\n207\n\n\n104\n213\n\n\n105\n192\n\n\n106\n185\n\n\n107\n174\n\n\n108\n164\n\n\n109\n157\n\n\n110\n148\n\n\n111\n161\n\n\n112\n158\n\n\n113\n163\n\n\n114\n128\n\n\n115\n126\n\n\n116\n146\n\n\n117\n154\n\n\n118\n119\n\n\n119\n107\n\n\n120\n93\n\n\n121\n119\n\n\n122\n84\n\n\n123\n105\n\n\n124\n84\n\n\n125\n101\n\n\n126\n117\n\n\n127\n89\n\n\n128\n84\n\n\n129\n94\n\n\n130\n74\n\n\n131\n62\n\n\n132\n88\n\n\n133\n79\n\n\n134\n63\n\n\n135\n67\n\n\n136\n67\n\n\n137\n84\n\n\n138\n69\n\n\n139\n65\n\n\n140\n59\n\n\n141\n54\n\n\n142\n36\n\n\n143\n46\n\n\n144\n37\n\n\n145\n55\n\n\n146\n44\n\n\n147\n65\n\n\n148\n43\n\n\n149\n55\n\n\n150\n39\n\n\n151\n47\n\n\n152\n43\n\n\n153\n45\n\n\n154\n37\n\n\n155\n36\n\n\n156\n42\n\n\n157\n29\n\n\n158\n32\n\n\n159\n33\n\n\n160\n30\n\n\n161\n30\n\n\n162\n37\n\n\n163\n28\n\n\n164\n23\n\n\n165\n38\n\n\n166\n31\n\n\n167\n30\n\n\n168\n36\n\n\n169\n14\n\n\n170\n26\n\n\n171\n19\n\n\n172\n25\n\n\n173\n20\n\n\n174\n19\n\n\n175\n31\n\n\n176\n20\n\n\n177\n12\n\n\n178\n16\n\n\n179\n15\n\n\n180\n19\n\n\n181\n17\n\n\n182\n13\n\n\n183\n12\n\n\n184\n11\n\n\n185\n17\n\n\n186\n9\n\n\n187\n9\n\n\n188\n9\n\n\n189\n14\n\n\n190\n13\n\n\n191\n5\n\n\n192\n14\n\n\n193\n9\n\n\n194\n11\n\n\n195\n7\n\n\n196\n4\n\n\n197\n4\n\n\n198\n8\n\n\n199\n6\n\n\n200\n8\n\n\n201\n3\n\n\n202\n7\n\n\n203\n8\n\n\n204\n5\n\n\n205\n3\n\n\n206\n4\n\n\n207\n7\n\n\n208\n9\n\n\n209\n4\n\n\n210\n1\n\n\n211\n4\n\n\n212\n4\n\n\n213\n4\n\n\n214\n3\n\n\n215\n1\n\n\n216\n5\n\n\n217\n4\n\n\n218\n1\n\n\n219\n7\n\n\n220\n2\n\n\n221\n1\n\n\n222\n3\n\n\n223\n1\n\n\n224\n2\n\n\n225\n5\n\n\n226\n3\n\n\n227\n6\n\n\n228\n2\n\n\n229\n2\n\n\n230\n2\n\n\n231\n1\n\n\n232\n2\n\n\n233\n2\n\n\n234\n3\n\n\n235\n2\n\n\n236\n3\n\n\n238\n3\n\n\n239\n4\n\n\n240\n1\n\n\n241\n1\n\n\n242\n1\n\n\n243\n2\n\n\n244\n1\n\n\n246\n1\n\n\n247\n1\n\n\n248\n4\n\n\n249\n3\n\n\n250\n3\n\n\n252\n3\n\n\n254\n1\n\n\n256\n4\n\n\n257\n1\n\n\n259\n1\n\n\n260\n2\n\n\n261\n1\n\n\n262\n1\n\n\n263\n1\n\n\n264\n1\n\n\n265\n3\n\n\n266\n7\n\n\n267\n3\n\n\n268\n1\n\n\n269\n3\n\n\n270\n1\n\n\n271\n1\n\n\n272\n1\n\n\n273\n2\n\n\n274\n3\n\n\n275\n1\n\n\n279\n2\n\n\n281\n2\n\n\n284\n1\n\n\n286\n1\n\n\n287\n1\n\n\n292\n1\n\n\n293\n1\n\n\n294\n1\n\n\n295\n1\n\n\n299\n1\n\n\n301\n1\n\n\n303\n1\n\n\n305\n1\n\n\n312\n1\n\n\n313\n1\n\n\n316\n1\n\n\n320\n2\n\n\n321\n1\n\n\n322\n1\n\n\n325\n1\n\n\n326\n1\n\n\n327\n1\n\n\n333\n1\n\n\n334\n1\n\n\n335\n1\n\n\n336\n1\n\n\n340\n4\n\n\n341\n1\n\n\n346\n1\n\n\n349\n1\n\n\n368\n1\n\n\n369\n1\n\n\n377\n1\n\n\n398\n1\n\n\n406\n1\n\n\n424\n1\n\n\n471\n1\n\n\n475\n1\n\n\n\n\n1 Total trips taken for the given duration.\n\n\n\n\n\n\n\n\n\n\n\nCodetripTimeTable &lt;- dplyr::tbl(dbconn, \"db/freq_tripTime.db\") |&gt;\ndplyr::collect()\n\ntripTimePlot &lt;- tripTimeTable |&gt;\nggplot2::ggplot(mapping = ggplot2::aes(x = trip_time, y = n, fill = n)) +\nggplot2::geom_col(show.legend = FALSE) +\nggplot2::labs(title = \"Trip Duration Frequency\", subtitle = \"Tallies the duration of time people rent cycles for\") +\nggplot2::scale_fill_distiller(palette = \"YlOrRd\") +\nggplot2::xlim(NA, 100) +\nggplot2::theme(\npanel.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\nplot.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\ntext = ggplot2::element_text(color = \"seashell\"),\npanel.grid = ggplot2::element_blank(),\naxis.title.x = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.title.y = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.text.x = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(1, 1, 1, 1), \"mm\")),\naxis.text.y = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(2, 2, 2, 2), \"mm\")),\naxis.ticks = ggplot2::element_line(color = \"LavenderBlush\"),\naxis.ticks.y = ggplot2::element_blank(),\npanel.grid.major.y = ggplot2::element_line(color = \"grey30\")\n)\n\ntripTimePlot\n\n\n\n\n\n\nFigure 14: Trip-Time Totals\n\n\n\n\n\n\n\n3.2.21 Membership Summary\n\n\n\nCodedplyr::tbl(dbconn, \"db/freqCompare_tripTime.db\") |&gt;\ndplyr::collect() |&gt;\ndplyr::arrange(trip_time, member_casual) |&gt;\ngt::gt(groupname_col = \"trip_time\", row_group_as_column = TRUE) |&gt;\ngt::tab_header(title = \"Durations by Membership\", subtitle = \"Measured in minutes.\") |&gt;\ngt::fmt_number(decimals = 0) |&gt;\ngt::cols_label(member_casual = \"Membership\", n = \"Trips\") |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ncolumn_labels.hidden = FALSE,\nrow.striping.include_table_body = TRUE\n) |&gt;\ngt::tab_footnote(footnote = \"Trip counts by membership status.\",\nlocations = gt::cells_column_labels(\"n\"))\ntripTime_tbl &lt;- dplyr::tbl(dbconn, tblPath_fltrd) |&gt;\ndplyr::select(member_casual, trip_time) |&gt;\ndplyr::mutate(trip_time = round(trip_time, digits = 0)) |&gt;\ndplyr::arrange(trip_time) |&gt;\ndplyr::collect() |&gt;\ndplyr::mutate(\ntrip_time = forcats::as_factor(trip_time),\ntrip_time = forcats::fct_inorder(trip_time)\n)\n\n\ntriptime_compareSummary &lt;- tripTime_tbl |&gt;\ndplyr::select(trip_time, member_casual) |&gt;\ngtsummary::tbl_summary(by = member_casual, label = list(trip_time = \"Time (minutes)\", member_casual = \"Membership\")) |&gt;\n#gtsummary::add_p() |&gt;\ngtsummary::as_gt() |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\")\n\n\nTable 20: Trip Time Comparison\n\n\n\n\n\n\n\nDurations by Membership\n\n\nMeasured in minutes.\n\n\n\nMembership\nTrips1\n\n\n\n\n\n1\ncasual\n880\n\n\nmember\n10,832\n\n\n2\ncasual\n14,356\n\n\nmember\n92,582\n\n\n3\ncasual\n39,875\n\n\nmember\n175,100\n\n\n4\ncasual\n61,441\n\n\nmember\n215,838\n\n\n5\ncasual\n72,805\n\n\nmember\n220,998\n\n\n6\ncasual\n76,957\n\n\nmember\n209,798\n\n\n7\ncasual\n77,778\n\n\nmember\n191,586\n\n\n8\ncasual\n75,116\n\n\nmember\n173,645\n\n\n9\ncasual\n70,951\n\n\nmember\n154,951\n\n\n10\ncasual\n65,329\n\n\nmember\n137,843\n\n\n11\ncasual\n59,913\n\n\nmember\n120,127\n\n\n12\ncasual\n54,447\n\n\nmember\n105,331\n\n\n13\ncasual\n49,798\n\n\nmember\n92,676\n\n\n14\ncasual\n44,654\n\n\nmember\n81,463\n\n\n15\ncasual\n40,313\n\n\nmember\n70,918\n\n\n16\ncasual\n36,284\n\n\nmember\n62,644\n\n\n17\ncasual\n32,816\n\n\nmember\n54,656\n\n\n18\ncasual\n29,780\n\n\nmember\n48,468\n\n\n19\ncasual\n27,535\n\n\nmember\n42,753\n\n\n20\ncasual\n24,781\n\n\nmember\n38,186\n\n\n21\ncasual\n22,573\n\n\nmember\n33,572\n\n\n22\ncasual\n20,794\n\n\nmember\n30,252\n\n\n23\ncasual\n19,084\n\n\nmember\n27,182\n\n\n24\ncasual\n17,533\n\n\nmember\n24,397\n\n\n25\ncasual\n15,783\n\n\nmember\n21,924\n\n\n26\ncasual\n14,433\n\n\nmember\n19,666\n\n\n27\ncasual\n13,269\n\n\nmember\n17,890\n\n\n28\ncasual\n12,264\n\n\nmember\n15,909\n\n\n29\ncasual\n11,170\n\n\nmember\n14,416\n\n\n30\ncasual\n10,148\n\n\nmember\n13,200\n\n\n31\ncasual\n9,346\n\n\nmember\n12,161\n\n\n32\ncasual\n8,625\n\n\nmember\n10,759\n\n\n33\ncasual\n8,226\n\n\nmember\n9,894\n\n\n34\ncasual\n7,238\n\n\nmember\n8,890\n\n\n35\ncasual\n6,834\n\n\nmember\n8,040\n\n\n36\ncasual\n6,332\n\n\nmember\n7,114\n\n\n37\ncasual\n5,909\n\n\nmember\n6,510\n\n\n38\ncasual\n5,515\n\n\nmember\n6,158\n\n\n39\ncasual\n5,087\n\n\nmember\n5,524\n\n\n40\ncasual\n4,694\n\n\nmember\n4,921\n\n\n41\ncasual\n4,424\n\n\nmember\n4,439\n\n\n42\ncasual\n4,061\n\n\nmember\n3,979\n\n\n43\ncasual\n3,747\n\n\nmember\n3,449\n\n\n44\ncasual\n3,579\n\n\nmember\n3,010\n\n\n45\ncasual\n3,278\n\n\nmember\n2,660\n\n\n46\ncasual\n3,119\n\n\nmember\n2,160\n\n\n47\ncasual\n2,880\n\n\nmember\n1,790\n\n\n48\ncasual\n2,748\n\n\nmember\n1,606\n\n\n49\ncasual\n2,601\n\n\nmember\n1,406\n\n\n50\ncasual\n2,428\n\n\nmember\n1,243\n\n\n51\ncasual\n2,341\n\n\nmember\n988\n\n\n52\ncasual\n2,135\n\n\nmember\n909\n\n\n53\ncasual\n2,006\n\n\nmember\n899\n\n\n54\ncasual\n1,997\n\n\nmember\n741\n\n\n55\ncasual\n1,807\n\n\nmember\n703\n\n\n56\ncasual\n1,722\n\n\nmember\n597\n\n\n57\ncasual\n1,581\n\n\nmember\n587\n\n\n58\ncasual\n1,533\n\n\nmember\n504\n\n\n59\ncasual\n1,515\n\n\nmember\n413\n\n\n60\ncasual\n1,454\n\n\nmember\n398\n\n\n61\ncasual\n1,299\n\n\nmember\n351\n\n\n62\ncasual\n1,244\n\n\nmember\n313\n\n\n63\ncasual\n1,134\n\n\nmember\n304\n\n\n64\ncasual\n1,103\n\n\nmember\n339\n\n\n65\ncasual\n995\n\n\nmember\n274\n\n\n66\ncasual\n1,004\n\n\nmember\n209\n\n\n67\ncasual\n925\n\n\nmember\n213\n\n\n68\ncasual\n941\n\n\nmember\n210\n\n\n69\ncasual\n828\n\n\nmember\n172\n\n\n70\ncasual\n773\n\n\nmember\n172\n\n\n71\ncasual\n774\n\n\nmember\n150\n\n\n72\ncasual\n710\n\n\nmember\n140\n\n\n73\ncasual\n712\n\n\nmember\n139\n\n\n74\ncasual\n684\n\n\nmember\n142\n\n\n75\ncasual\n644\n\n\nmember\n120\n\n\n76\ncasual\n623\n\n\nmember\n109\n\n\n77\ncasual\n568\n\n\nmember\n102\n\n\n78\ncasual\n579\n\n\nmember\n103\n\n\n79\ncasual\n545\n\n\nmember\n84\n\n\n80\ncasual\n517\n\n\nmember\n100\n\n\n81\ncasual\n498\n\n\nmember\n102\n\n\n82\ncasual\n471\n\n\nmember\n85\n\n\n83\ncasual\n440\n\n\nmember\n70\n\n\n84\ncasual\n402\n\n\nmember\n65\n\n\n85\ncasual\n388\n\n\nmember\n67\n\n\n86\ncasual\n401\n\n\nmember\n70\n\n\n87\ncasual\n386\n\n\nmember\n53\n\n\n88\ncasual\n318\n\n\nmember\n58\n\n\n89\ncasual\n367\n\n\nmember\n55\n\n\n90\ncasual\n325\n\n\nmember\n57\n\n\n91\ncasual\n307\n\n\nmember\n36\n\n\n92\ncasual\n298\n\n\nmember\n52\n\n\n93\ncasual\n272\n\n\nmember\n33\n\n\n94\ncasual\n262\n\n\nmember\n40\n\n\n95\ncasual\n238\n\n\nmember\n29\n\n\n96\ncasual\n234\n\n\nmember\n36\n\n\n97\ncasual\n215\n\n\nmember\n26\n\n\n98\ncasual\n233\n\n\nmember\n27\n\n\n99\ncasual\n209\n\n\nmember\n26\n\n\n100\ncasual\n188\n\n\nmember\n28\n\n\n101\ncasual\n214\n\n\nmember\n28\n\n\n102\ncasual\n209\n\n\nmember\n32\n\n\n103\ncasual\n178\n\n\nmember\n29\n\n\n104\ncasual\n194\n\n\nmember\n19\n\n\n105\ncasual\n165\n\n\nmember\n27\n\n\n106\ncasual\n165\n\n\nmember\n20\n\n\n107\ncasual\n155\n\n\nmember\n19\n\n\n108\ncasual\n139\n\n\nmember\n25\n\n\n109\ncasual\n133\n\n\nmember\n24\n\n\n110\ncasual\n129\n\n\nmember\n19\n\n\n111\ncasual\n145\n\n\nmember\n16\n\n\n112\ncasual\n140\n\n\nmember\n18\n\n\n113\ncasual\n146\n\n\nmember\n17\n\n\n114\ncasual\n112\n\n\nmember\n16\n\n\n115\ncasual\n119\n\n\nmember\n7\n\n\n116\ncasual\n131\n\n\nmember\n15\n\n\n117\ncasual\n138\n\n\nmember\n16\n\n\n118\ncasual\n109\n\n\nmember\n10\n\n\n119\ncasual\n93\n\n\nmember\n14\n\n\n120\ncasual\n85\n\n\nmember\n8\n\n\n121\ncasual\n105\n\n\nmember\n14\n\n\n122\ncasual\n75\n\n\nmember\n9\n\n\n123\ncasual\n96\n\n\nmember\n9\n\n\n124\ncasual\n77\n\n\nmember\n7\n\n\n125\ncasual\n88\n\n\nmember\n13\n\n\n126\ncasual\n106\n\n\nmember\n11\n\n\n127\ncasual\n78\n\n\nmember\n11\n\n\n128\ncasual\n78\n\n\nmember\n6\n\n\n129\ncasual\n84\n\n\nmember\n10\n\n\n130\ncasual\n68\n\n\nmember\n6\n\n\n131\ncasual\n54\n\n\nmember\n8\n\n\n132\ncasual\n83\n\n\nmember\n5\n\n\n133\ncasual\n66\n\n\nmember\n13\n\n\n134\ncasual\n55\n\n\nmember\n8\n\n\n135\ncasual\n62\n\n\nmember\n5\n\n\n136\ncasual\n57\n\n\nmember\n10\n\n\n137\ncasual\n74\n\n\nmember\n10\n\n\n138\ncasual\n65\n\n\nmember\n4\n\n\n139\ncasual\n59\n\n\nmember\n6\n\n\n140\ncasual\n55\n\n\nmember\n4\n\n\n141\ncasual\n49\n\n\nmember\n5\n\n\n142\ncasual\n33\n\n\nmember\n3\n\n\n143\ncasual\n42\n\n\nmember\n4\n\n\n144\ncasual\n35\n\n\nmember\n2\n\n\n145\ncasual\n45\n\n\nmember\n10\n\n\n146\ncasual\n41\n\n\nmember\n3\n\n\n147\ncasual\n62\n\n\nmember\n3\n\n\n148\ncasual\n38\n\n\nmember\n5\n\n\n149\ncasual\n53\n\n\nmember\n2\n\n\n150\ncasual\n37\n\n\nmember\n2\n\n\n151\ncasual\n45\n\n\nmember\n2\n\n\n152\ncasual\n41\n\n\nmember\n2\n\n\n153\ncasual\n41\n\n\nmember\n4\n\n\n154\ncasual\n34\n\n\nmember\n3\n\n\n155\ncasual\n34\n\n\nmember\n2\n\n\n156\ncasual\n35\n\n\nmember\n7\n\n\n157\ncasual\n24\n\n\nmember\n5\n\n\n158\ncasual\n26\n\n\nmember\n6\n\n\n159\ncasual\n29\n\n\nmember\n4\n\n\n160\ncasual\n26\n\n\nmember\n4\n\n\n161\ncasual\n25\n\n\nmember\n5\n\n\n162\ncasual\n28\n\n\nmember\n9\n\n\n163\ncasual\n26\n\n\nmember\n2\n\n\n164\ncasual\n21\n\n\nmember\n2\n\n\n165\ncasual\n31\n\n\nmember\n7\n\n\n166\ncasual\n28\n\n\nmember\n3\n\n\n167\ncasual\n25\n\n\nmember\n5\n\n\n168\ncasual\n31\n\n\nmember\n5\n\n\n169\ncasual\n13\n\n\nmember\n1\n\n\n170\ncasual\n25\n\n\nmember\n1\n\n\n171\ncasual\n16\n\n\nmember\n3\n\n\n172\ncasual\n22\n\n\nmember\n3\n\n\n173\ncasual\n19\n\n\nmember\n1\n\n\n174\ncasual\n16\n\n\nmember\n3\n\n\n175\ncasual\n29\n\n\nmember\n2\n\n\n176\ncasual\n19\n\n\nmember\n1\n\n\n177\ncasual\n10\n\n\nmember\n2\n\n\n178\ncasual\n15\n\n\nmember\n1\n\n\n179\ncasual\n14\n\n\nmember\n1\n\n\n180\ncasual\n16\n\n\nmember\n3\n\n\n181\ncasual\n13\n\n\nmember\n4\n\n\n182\ncasual\n11\n\n\nmember\n2\n\n\n183\ncasual\n10\n\n\nmember\n2\n\n\n184\ncasual\n8\n\n\nmember\n3\n\n\n185\ncasual\n13\n\n\nmember\n4\n\n\n186\ncasual\n8\n\n\nmember\n1\n\n\n187\ncasual\n7\n\n\nmember\n2\n\n\n188\ncasual\n8\n\n\nmember\n1\n\n\n189\ncasual\n11\n\n\nmember\n3\n\n\n190\ncasual\n10\n\n\nmember\n3\n\n\n191\ncasual\n5\n\n\n192\ncasual\n13\n\n\nmember\n1\n\n\n193\ncasual\n8\n\n\nmember\n1\n\n\n194\ncasual\n9\n\n\nmember\n2\n\n\n195\ncasual\n6\n\n\nmember\n1\n\n\n196\ncasual\n4\n\n\n197\ncasual\n4\n\n\n198\ncasual\n7\n\n\nmember\n1\n\n\n199\ncasual\n5\n\n\nmember\n1\n\n\n200\ncasual\n8\n\n\n201\ncasual\n3\n\n\n202\ncasual\n6\n\n\nmember\n1\n\n\n203\ncasual\n8\n\n\n204\ncasual\n4\n\n\nmember\n1\n\n\n205\ncasual\n3\n\n\n206\ncasual\n4\n\n\n207\ncasual\n6\n\n\nmember\n1\n\n\n208\ncasual\n8\n\n\nmember\n1\n\n\n209\ncasual\n4\n\n\n210\ncasual\n1\n\n\n211\ncasual\n3\n\n\nmember\n1\n\n\n212\ncasual\n4\n\n\n213\ncasual\n3\n\n\nmember\n1\n\n\n214\ncasual\n2\n\n\nmember\n1\n\n\n215\ncasual\n1\n\n\n216\ncasual\n5\n\n\n217\ncasual\n2\n\n\nmember\n2\n\n\n218\ncasual\n1\n\n\n219\ncasual\n7\n\n\n220\ncasual\n2\n\n\n221\ncasual\n1\n\n\n222\ncasual\n3\n\n\n223\ncasual\n1\n\n\n224\ncasual\n2\n\n\n225\ncasual\n5\n\n\n226\ncasual\n3\n\n\n227\ncasual\n6\n\n\n228\ncasual\n2\n\n\n229\ncasual\n1\n\n\nmember\n1\n\n\n230\ncasual\n2\n\n\n231\ncasual\n1\n\n\n232\ncasual\n2\n\n\n233\ncasual\n2\n\n\n234\ncasual\n2\n\n\nmember\n1\n\n\n235\ncasual\n1\n\n\nmember\n1\n\n\n236\ncasual\n2\n\n\nmember\n1\n\n\n238\ncasual\n1\n\n\nmember\n2\n\n\n239\ncasual\n2\n\n\nmember\n2\n\n\n240\ncasual\n1\n\n\n241\ncasual\n1\n\n\n242\ncasual\n1\n\n\n243\ncasual\n2\n\n\n244\ncasual\n1\n\n\n246\nmember\n1\n\n\n247\ncasual\n1\n\n\n248\ncasual\n3\n\n\nmember\n1\n\n\n249\ncasual\n3\n\n\n250\ncasual\n3\n\n\n252\ncasual\n3\n\n\n254\ncasual\n1\n\n\n256\ncasual\n3\n\n\nmember\n1\n\n\n257\nmember\n1\n\n\n259\ncasual\n1\n\n\n260\ncasual\n2\n\n\n261\ncasual\n1\n\n\n262\nmember\n1\n\n\n263\ncasual\n1\n\n\n264\ncasual\n1\n\n\n265\ncasual\n3\n\n\n266\ncasual\n5\n\n\nmember\n2\n\n\n267\ncasual\n2\n\n\nmember\n1\n\n\n268\nmember\n1\n\n\n269\ncasual\n3\n\n\n270\ncasual\n1\n\n\n271\nmember\n1\n\n\n272\ncasual\n1\n\n\n273\ncasual\n2\n\n\n274\ncasual\n3\n\n\n275\ncasual\n1\n\n\n279\ncasual\n1\n\n\nmember\n1\n\n\n281\ncasual\n2\n\n\n284\ncasual\n1\n\n\n286\nmember\n1\n\n\n287\ncasual\n1\n\n\n292\ncasual\n1\n\n\n293\nmember\n1\n\n\n294\ncasual\n1\n\n\n295\ncasual\n1\n\n\n299\ncasual\n1\n\n\n301\ncasual\n1\n\n\n303\ncasual\n1\n\n\n305\ncasual\n1\n\n\n312\ncasual\n1\n\n\n313\ncasual\n1\n\n\n316\ncasual\n1\n\n\n320\ncasual\n1\n\n\nmember\n1\n\n\n321\ncasual\n1\n\n\n322\nmember\n1\n\n\n325\nmember\n1\n\n\n326\ncasual\n1\n\n\n327\nmember\n1\n\n\n333\nmember\n1\n\n\n334\ncasual\n1\n\n\n335\ncasual\n1\n\n\n336\nmember\n1\n\n\n340\ncasual\n1\n\n\nmember\n3\n\n\n341\nmember\n1\n\n\n346\ncasual\n1\n\n\n349\ncasual\n1\n\n\n368\ncasual\n1\n\n\n369\ncasual\n1\n\n\n377\nmember\n1\n\n\n398\ncasual\n1\n\n\n406\nmember\n1\n\n\n424\nmember\n1\n\n\n471\ncasual\n1\n\n\n475\ncasual\n1\n\n\n\n\n1 Trip counts by membership status.\n\n\n\n\n\n\n\n\n\n\n\nCodedplyr::tbl(dbconn, \"db/freqCompare_tripTime.db\") |&gt;\nggplot2::ggplot(mapping = ggplot2::aes(x = trip_time, y = n, color = member_casual)) +\nggplot2::geom_line(show.legend = TRUE) +\nggplot2::xlim(NA, 100) +\nggplot2::scale_color_brewer(palette = \"Paired\", name = \"Subscriber Status\") +\nggplot2::labs(title = \"Trip-Time to Membership Frequency\", subtitle = \"Grouped by sub status\") +\nggplot2::theme(\npanel.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\nplot.background = ggplot2::element_rect(fill = \"#222222\", color = NA),\ntext = ggplot2::element_text(color = \"seashell\"),\npanel.grid = ggplot2::element_blank(),\naxis.title.x = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.title.y = ggplot2::element_text(margin = grid::unit(c(5, 5, 5, 5), \"mm\")),\naxis.text.x = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(1, 1, 1, 1), \"mm\")),\naxis.text.y = ggplot2::element_text(color = \"Snow\", margin = grid::unit(c(2, 2, 2, 2), \"mm\")),\naxis.ticks = ggplot2::element_line(color = \"LavenderBlush\"),\naxis.ticks.y = ggplot2::element_blank(),\npanel.grid.major.y = ggplot2::element_line(color = \"grey30\"),\nlegend.background = ggplot2::element_rect(fill = \"#222222\")\n)\n\n\n\n\n\n\nFigure 15: Trip-Time Group Frequency\n\n\n\n\n\n\n\n3.2.22 Can trip duration predict a binary outcome?\n\nCode# For the trip times comparison\ntriptime_asNums &lt;- dplyr::tbl(dbconn, tblPath_fltrd) |&gt;\ndplyr::select(member_casual, trip_time) |&gt;\ndplyr::mutate(trip_time = round(trip_time, digits = 0)) |&gt;\ndplyr::arrange(trip_time) |&gt;\ndplyr::collect()\n\ntriptime_asNums$member_casual &lt;- stringr::str_replace(triptime_asNums$member_casual, pattern = \"casual\", \"0\")\n\ntriptime_asNums$member_casual &lt;- stringr::str_replace(triptime_asNums$member_casual, pattern = \"member\", \"1\")\n\ntriptime_asNums$member_casual &lt;- triptime_asNums$member_casual |&gt; as.integer()\n\ntriptime_asNums$member_casual &lt;- factor(\ntriptime_asNums$member_casual,\nlevels = c(0, 1),\nlabels = c(\"casual\", \"member\")\n)\n\ntriptimeModel &lt;- stats::glm(member_casual ~ trip_time, data = triptime_asNums, family = binomial)\n\n\ntriptimeStats_tbl &lt;- triptimeModel |&gt;\ngtsummary::tbl_regression(label = list(trip_time = \"Duration\", member_casual = \"Membership\"))\n\ntriptimeStats_tbl |&gt;\ngtsummary::as_gt() |&gt;\ngt::tab_options(\ntable.background.color = 'transparent',\ntable.font.color = \"SeaShell\",\ntable_body.vlines.color = \"gray20\",\ntable_body.hlines.color = \"gray20\")\n\n\n\n\n\nCharacteristic\n\nlog(OR)1\n\n\n95% CI1\n\np-value\n\n\nDuration\n-0.04\n-0.04, -0.04\n&lt;0.001\n\n\n\n1 OR = Odds Ratio, CI = Confidence Interval"
  },
  {
    "objectID": "index.html#sec-epiflow",
    "href": "index.html#sec-epiflow",
    "title": "Bike-Sharing in the Streets of Chicago",
    "section": "\n3.3 Traffic Flow",
    "text": "3.3 Traffic Flow\n\nFor an interesting birds-eye-view of trip behaviors, see Figure 16. This is called an epiflow diagram. It is interactive, so circles (nodes) and the lines connecting the nodes can be clicked for more information. There is also a drop-down window to further explore the data. The top 34 most traveled stations were used for this visual network diagram. The line thickness roughly corresponds with amount of trips taken, so thicker lines means more trips between nodes. (Moraga et al., n.d.)\nThese are the most active stations. Luckily, there might be a way to further explore the typical high traffic station locations and why they are high traffic. Section 3.4\n\n\n\n\nCreating an Epiflow\n\n\n\n\n\n\n\n\nFirst, creates the frequency of trips taken to and from pairs of stations. We are only going to look deeper into the top 50 most traveled pairs.flowData &lt;- dplyr::tbl(dbconn,\n                       tblPath_fltrd) |&gt;\n    dplyr::select(start_station_name,\n                  end_station_name) |&gt;\n    dplyr::group_by(start_station_name,\n                    end_station_name) |&gt;\n    dplyr::summarize(n = n()) |&gt;\n    dplyr::ungroup() |&gt;\n    dplyr::arrange(desc(n)) |&gt;\n    dplyr::rename(\"from_station\" = start_station_name,\n                  \"to_station\" = end_station_name) |&gt;\n    dplyr::collect() |&gt;\n    dplyr::slice_head(n = 50)\n\n\n\nSecond, we need statistics but also to combine the statistics for every unique station name.locationData &lt;- dplyr::tbl(dbconn,\n                           tblPath_fltrd) |&gt;\n    dplyr::select(start_station_name,\n                  end_station_name,\n                  started_at,\n                  ended_at,\n                  trip_time) |&gt;\n    dplyr::group_by(start_station_name,\n                    end_station_name\n                ) |&gt;\n    dplyr::mutate(\"trip_time\" = round(trip_time,\n                                      digits = 0)) |&gt;\n    dplyr::summarize(\n        \"trip_count\" = dplyr::n(),\n        \"first_date\" = min(started_at),\n        \"last_date\" = max(ended_at),\n    ) |&gt;\n    dplyr::ungroup() |&gt;\n    dplyr::rename(\"from_station\" = start_station_name,\n                  \"to_station\" = end_station_name\n               ) |&gt;\n    dplyr::arrange(desc(trip_count)) |&gt;\n    dplyr::collect()\n\n\n\n# Need to combine all names to single column and recalculate \n# or retain other stats.\nlocationData_pivoted &lt;- locationData |&gt;\n    tidyr::pivot_longer(cols = 1:2, \n                        values_to = \"allNames\") |&gt;\n    dplyr::group_by(allNames) |&gt;\n    dplyr::summarize(\"trips_toAndfrom\" = sum(trip_count),\n                     first_date = min(first_date),\n                     last_date = max(last_date),\n                     ) |&gt;\n    dplyr::arrange(trips_toAndfrom)\n\n\n\nThird, creates epiflow objects, which take in a pair of dataframes and creates the flows between them.# for all the pairs\nef_test &lt;- epiflows::make_epiflows(flows = flowData,\n                                   locations = locationData_pivoted,\n                                   num_cases = \"trips_toAndfrom\")\n\n\n\n\n\n\n\n\nTables\n\n\n\n\n\n\n\n\nFirst, just a quick view of the flow data table we made earlier.flowData\n\n# A tibble: 50 × 3\n   from_station                      to_station                   n\n   &lt;chr&gt;                             &lt;chr&gt;                    &lt;dbl&gt;\n 1 Ellis Ave & 60th St               Ellis Ave & 55th St       6927\n 2 Ellis Ave & 60th St               University Ave & 57th St  6600\n 3 Ellis Ave & 55th St               Ellis Ave & 60th St       6349\n 4 University Ave & 57th St          Ellis Ave & 60th St       6168\n 5 Calumet Ave & 33rd St             State St & 33rd St        5417\n 6 State St & 33rd St                Calumet Ave & 33rd St     5343\n 7 DuSable Lake Shore Dr & Monroe St Streeter Dr & Grand Ave   4023\n 8 Loomis St & Lexington St          Morgan St & Polk St       3719\n 9 Morgan St & Polk St               Loomis St & Lexington St  3379\n10 University Ave & 57th St          Kimbark Ave & 53rd St     3112\n# ℹ 40 more rows\n\n\n\nSecond, another quick view, but for thethe location data we pivoted earlier.locationData_pivoted |&gt;\n    dplyr::arrange(desc(trips_toAndfrom))\n\n# A tibble: 1,567 × 4\n   allNames              trips_toAndfrom first_date          last_date          \n   &lt;chr&gt;                           &lt;dbl&gt; &lt;dttm&gt;              &lt;dttm&gt;             \n 1 Streeter Dr & Grand …           86422 2023-01-01 00:05:43 2024-01-01 00:19:01\n 2 Kingsbury St & Kinzi…           61277 2023-01-01 01:21:59 2023-12-31 21:30:50\n 3 DuSable Lake Shore D…           60808 2023-01-01 02:12:09 2023-12-31 23:34:53\n 4 Clark St & Elm St               60552 2023-01-01 01:06:48 2023-12-31 23:29:33\n 5 Clinton St & Washing…           58278 2023-01-01 00:44:39 2023-12-31 18:03:02\n 6 Wells St & Concord Ln           57642 2023-01-01 01:15:27 2023-12-31 23:51:50\n 7 Michigan Ave & Oak St           54000 2023-01-01 00:59:17 2023-12-31 23:09:35\n 8 Wells St & Elm St               52315 2023-01-01 00:59:22 2023-12-31 23:51:48\n 9 DuSable Lake Shore D…           48833 2023-01-01 00:14:47 2023-12-31 16:49:56\n10 Theater on the Lake             48349 2023-01-01 03:14:22 2023-12-31 22:53:53\n# ℹ 1,557 more rows\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 16: EpiFlow Network"
  },
  {
    "objectID": "index.html#sec-mapview",
    "href": "index.html#sec-mapview",
    "title": "Bike-Sharing in the Streets of Chicago",
    "section": "\n3.4 Checking the Map",
    "text": "3.4 Checking the Map\n\nThis section was made possible thanks to the latitude and longitude coordinates data provided alongside the stations names. Coming from the epiflow diagram, this should help make the data less abstract. The accordion below expands and collapses four OpenStreet maps found in the callout section below. These maps were split for viewing logistics. They contain from the epiflow in the section above. These maps are interactive, so the default views are zoomable and movable. The transparent burst buttons enable snappy zooming-in of the station groups.\n\n\n\n\nCode for Mapping\n\n\n\n\n\n\n\n\nProcessing ‘flowData’ created earlier to include geolocation data for mapview plots.# All distinct stations in one column\nnames &lt;- flowData |&gt;\n    dplyr::select(from_station,\n                  to_station) |&gt;\n    tidyr::pivot_longer(cols = 1:2,\n                        names_to = NULL,\n                        values_to = \"station_names\") |&gt;\n    dplyr::distinct()\n\n\n# The important geo-coordinates corresponding to station names\nmapData &lt;- dplyr::tbl(dbconn,\n                      tblPath_fltrd,\n                      check_from = FALSE) |&gt;\n    dplyr::select(start_station_name,\n                  start_lat,\n                  start_lng,\n                  end_station_name,\n                  end_lat,\n                  end_lng)\n\n# Filter to include all observations that match the station names listed in 'names'. We need the geo-coordinates alongside the names.\nmapData1 &lt;- mapData |&gt;\n    dplyr::collect() |&gt;\n# Filter, but through a vector of conditions.\n    dplyr::filter(start_station_name %in% names[[1]],\n                  end_station_name %in% names[[1]]) |&gt;\n    dplyr::select(start_station_name:start_lng)\n\n\n# Had to split 'mapData' into two and pivot into a single table.\nmapData2 &lt;- mapData |&gt;\n    dplyr::collect() |&gt;\n    dplyr::filter(start_station_name %in% names[[1]],\n                  end_station_name %in% names[[1]]) |&gt;\n    dplyr::select(end_station_name:end_lng)\n\n# Nice grouping\nstations_groupMap &lt;- dplyr::bind_rows(mapData1, mapData2) |&gt;\ndplyr::select(start_station_name, start_lat, start_lng) |&gt;\ndplyr::rename(\"station_names\" = start_station_name,\n\"lat\" = start_lat,\n\"lng\" = start_lng) |&gt;\ndplyr::distinct() |&gt;\ndplyr::group_by(station_names)\n\n# Setting seed for sampling\nset.seed(113)\n\n# Taking 10 random samples from each station_name group\nsampled_stations &lt;- stations_groupMap |&gt;\n    dplyr::slice_sample(n = 10) |&gt;\n    tidyr::drop_na()\n\n\n\nCreates a map coloring palette excluding grays.# All of the r-colors\nallPalette &lt;- colors()\n\n# The grays are vast so we don't want those watering down the samples.\ncolorfulPal &lt;- purrr::discard(allPalette, stringr::str_detect(allPalette, \"gr(a|e)y\"))\n\n# When we sample the colors, 10 should be slightly more than needed.\nn_colors &lt;- 10\n\n\n\nFirst, sourcing the script needed to generate the maps and creating the list of vectors used as input. These vectors are the slices of the top most traveled stations.slicerVector &lt;- list(c(1:9), c(10:18), c(19:27), c(28:34))\nsource(\"mapViewer.R\")\n\n\n\nThe script used to generate the maps.# I needed the stations groups' burst buttons to fit\n# the viewing window in my document and the only way I could think of is to \n#   split the stations into multiple maps. This reduces duplicate code.\n\n\n\nmapViewer &lt;- function(x) {\n    \n    nameSlice &lt;- sampled_stations |&gt;\n        dplyr::ungroup() |&gt;\n        dplyr::distinct(station_names) |&gt;\n        dplyr::slice(x)\n    \n    viewMap &lt;- sampled_stations |&gt;\n        dplyr::filter(station_names %in% nameSlice$station_names) |&gt;\n        sf::st_as_sf(coords = c(3:2), crs = 4326) |&gt;\n        mapview::mapview(\n            zcol = \"station_names\",\n            col.regions = randomColors,\n            map.types = \"OpenStreetMap\",\n            burst = TRUE,\n            legend = FALSE)\n    \n    return(viewMap)\n}\n\n\n\n\n\n\n\n\n\nBenson Ave & Church St … Ellis Ave & 60th St\n\n\n\n\n\nCodeset.seed(240)\nrandomColors &lt;- sample(colorfulPal, n_colors)\nmapViewer(slicerVector[[1]])\n\n\n\n\n\n\nFigure 17: Benson Ave & Church St - Ellis Ave & 60th St\n\n\n\n\n\n\n\n\n\nGreenview Ave & Fullteron Ave … Loomis Ave & Lexington St\n\n\n\n\n\n\n\n\n\n\n\nFigure 18: Greenview Ave & Fullteron Ave - Loomis Ave & Lexington St\n\n\n\n\n\n\n\n\n\nMichigan Ave & Oak St … State St & 33rd St\n\n\n\n\n\n\n\n\n\n\n\nFigure 19: Michigan Ave & Oak St - State St & 33rd St\n\n\n\n\n\n\n\n\n\nStreet Dr & Grand Ave … Woodlawn Ave & 55th St\n\n\n\n\n\nCodeset.seed(243)\nrandomColors &lt;- sample(colorfulPal, n_colors)\nmapViewer(slicerVector[[4]])\n\n\n\n\n\n\nFigure 20: Street Dr & Grand Ave - Woodlawn Ave & 55th St\n\n\n\n\n\n\n\n\nFor example, suppose University Ave & 57th St was selected in the epiflow. As it happens this is at the heart of the University of Chicago. So where does the traffic to and from this location usually flow to? Selecting one of the other nodes highlighted with flows directing away from the previous node, is Kimbark Ave and 53rd St. This location is seated adjacent to the Vue 53 Apartments complex in the map view."
  }
]